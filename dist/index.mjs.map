{"version":3,"sources":["../src/constants/country.constant.ts","../src/constants/region.constant.ts","../src/constants/manufacturer.constant.ts","../src/constants/alphabet.constant.ts","../src/country-region.ts","../src/manufacturer.ts","../src/constants/year.constant.ts","../src/year.ts","../src/vin.ts"],"sourcesContent":["//Reference WMI Countries: https://en.m.wikibooks.org/wiki/Vehicle_Identification_Numbers_(VIN_codes)/World_Manufacturer_Identifier_(WMI)\n\nexport const countries = [\n  'AA-AH',\n  'South Africa',\n  'AJ-AK',\n  'Ivory Coast',\n  'AL-AM',\n  'Lesotho',\n  'AN-AP',\n  'Botswana',\n  'AR-AS',\n  'Namibia',\n  'AT-AU',\n  'Madagascar',\n  'AV-AW',\n  'Mauritius',\n  'AX-AY',\n  'Tunisia',\n  'AZ-A1',\n  'Cyprus',\n  'A2-A3',\n  'Zimbabwe',\n  'A4-A5',\n  'Mozambique',\n  'BA-BB',\n  'Angola',\n  'BC-BC',\n  'Ethiopia',\n  'BF-BG',\n  'Kenya',\n  'BH-BH',\n  'Rwanda',\n  'BL-BL',\n  'Nigeria',\n  'BR-BR',\n  'Algeria',\n  'BT-BT',\n  'Swaziland',\n  'BU-BU',\n  'Uganda',\n  'B3-B4',\n  'Libya',\n  'CA-CB',\n  'Egypt',\n  'CF-CG',\n  'Morocco',\n  'CL-CM',\n  'Zambia',\n  'EA-E0',\n  'Russia',\n  'HA-H0',\n  'China',\n  'JA-J0',\n  'Japan',\n  'KF-KH',\n  'Israel',\n  'KL-KR',\n  'South Korea',\n  'KS-KT',\n  'Jordan',\n  'K1-K3',\n  'South Korea',\n  'K5',\n  'Kyrgyzstan',\n  'LA-L0',\n  'China',\n  'MA-ME',\n  'India',\n  'MF-MK',\n  'Indonesia',\n  'ML-MR',\n  'Thailand',\n  'MS-MS',\n  'Myanmar',\n  'MU-MU',\n  'Mongolia',\n  'MX-MX',\n  'Kazakhstan',\n  'M1-M0',\n  'India',\n  'NA-NE',\n  'Iran',\n  'NF-NG',\n  'Pakistan',\n  'NJ-NJ',\n  'Iraq',\n  'NL-NR',\n  'Turkey',\n  'NS-NT',\n  'Uzbekistan',\n  'NV-NV',\n  'Azerbaijan',\n  'NX-NX',\n  'Tajikistan',\n  'NY-NY',\n  'Armenia',\n  'N1-N5',\n  'Iran',\n  'N7-N8',\n  'Turkey',\n  'PA-PC',\n  'Philippines',\n  'PF-PG',\n  'Singapore',\n  'PL-PR',\n  'Malaysia',\n  'PS-PT',\n  'Bangladesh',\n  'P5-P0',\n  'India',\n  'RA-RB',\n  'United Arab Emirates',\n  'RF-RK',\n  'Taiwan',\n  'RL-RM',\n  'Vietnam',\n  'RP-RP',\n  'Laos',\n  'RS-RT',\n  'Saudi Arabia',\n  'RU-RW',\n  'Russia',\n  'R1-R7',\n  'Hong Kong',\n  'SA-SM',\n  'United Kingdom',\n  'SN-ST',\n  'Germany',\n  'SU-SZ',\n  'Poland',\n  'S1-S2',\n  'Latvia',\n  'S3-S3',\n  'Georgia',\n  'S4-S4',\n  'Iceland',\n  'TA-TH',\n  'Switzerland',\n  'TJ-TP',\n  'Czech Republic',\n  'TR-TV',\n  'Hungary',\n  'TW-T1',\n  'Portugal',\n  'T3-T5',\n  'Republic of Serbia',\n  'T6-T6',\n  'Andorra',\n  'T7-T8',\n  'Netherlands',\n  'UA-UC',\n  'Spain',\n  'UH-UM',\n  'Denmark',\n  'UN-UR',\n  'Ireland',\n  'UU-UX',\n  'Romania',\n  'U1-U2',\n  'Macedonia',\n  'U5-U7',\n  'Slovakia',\n  'U8-U0',\n  'Bosnia & Herzegovina',\n  'VA-VE',\n  'Austria',\n  'VF-VR',\n  'France',\n  'VS-VW',\n  'Spain',\n  'VX-V2',\n  'France',\n  'V3-V5',\n  'Croatia',\n  'V6-V8',\n  'Estonia',\n  'WA-W0',\n  'Germany',\n  'XA-XC',\n  'Bulgaria',\n  'XD-XE',\n  'Russia',\n  'XF-XH',\n  'Greece',\n  'XJ-XK',\n  'Russia',\n  'XL-XR',\n  'Netherlands',\n  'XS-XW',\n  'Russia',\n  'XX-XY',\n  'Luxembourg',\n  'XZ-X0',\n  'Russia',\n  'YA-YE',\n  'Belgium',\n  'YF-YK',\n  'Finland',\n  'YN-YN',\n  'Malta',\n  'YS-YW',\n  'Sweden',\n  'YX-Y2',\n  'Norway',\n  'Y3-Y5',\n  'Belarus',\n  'Y6-Y8',\n  'Ukraine',\n  'ZA-ZU',\n  'Italy',\n  'ZX-ZZ',\n  'Slovenia',\n  'Z1-Z1',\n  'San Marino',\n  'Z3-Z5',\n  'Lithuania',\n  'Z6-Z0',\n  'Russia',\n  '1A-10',\n  'United States',\n  '2A-25',\n  'Canada',\n  '3A-3X',\n  'Mexico',\n  '34-34',\n  'Nicaragua',\n  '35-35',\n  'Dominican Republic',\n  '36-36',\n  'Honduras',\n  '37-37',\n  'Panama',\n  '38-39',\n  'Puerto Rico',\n  '4A-40',\n  'United States',\n  '5A-50',\n  'United States',\n  '6A-6X',\n  'Australia',\n  '6Y-61',\n  'New Zealand',\n  '7A-70',\n  'United States',\n  '8A-8E',\n  'Argentina',\n  '8F-8G',\n  'Chile',\n  '8L-8N',\n  'Ecuador',\n  '8S-8T',\n  'Peru',\n  '8X-8Z',\n  'Venezuela',\n  '82-82',\n  'Bolivia',\n  '84-84',\n  'Costa Rica',\n  '9A-9E',\n  'Brazil',\n  '9F-9G',\n  'Colombia',\n  '9S-9V',\n  'Uruguay',\n  '91-90',\n  'Brazil',\n];\n","export enum regions {\n  'A' = 'Africa',\n  'B' = 'Africa',\n  'C' = 'Africa',\n  'J' = 'Asia',\n  'K' = 'Asia',\n  'L' = 'Asia',\n  'M' = 'Asia',\n  'N' = 'Asia',\n  'O' = 'Asia',\n  'P' = 'Asia',\n  'Q' = 'Asia',\n  'R' = 'Asia',\n  'S' = 'Europe',\n  'T' = 'Europe',\n  'U' = 'Europe',\n  'V' = 'Europe',\n  'W' = 'Europe',\n  'X' = 'Europe',\n  'Y' = 'Europe',\n  'Z' = 'Europe',\n  // @ts-expect-error duplicate\n  '1' = 'North America',\n  // @ts-expect-error duplicate\n  '2' = 'North America',\n  // @ts-expect-error duplicate\n  '3' = 'North America',\n  // @ts-expect-error duplicate\n  '4' = 'North America',\n  // @ts-expect-error duplicate\n  '5' = 'North America',\n  // @ts-expect-error duplicate\n  '6' = 'Oceania',\n  // @ts-expect-error duplicate\n  '7' = 'Oceania',\n  // @ts-expect-error duplicate\n  '8' = 'South America',\n  // @ts-expect-error duplicate\n  '9' = 'South America',\n}\n","// @ts-nocheck\n// Skip Typescript check for number only enum keys\n// Code generated by scripts/generate-manufacturers-file.ts\n\n/**\n * Known vehicle manufacturers by WMI\n * @see https://en.wikipedia.org/wiki/Vehicle_identification_number\n */\nexport enum manufacturers {\n  // Africa\n  'AAA' = 'Audi South Africa made by Volkswagen of South Africa',\n  'AAK' = 'FAW Vehicle Manufacturers SA (PTY) Ltd.',\n  'AAM' = 'MAN Automotive (South Africa) (Pty) Ltd. includes VW Truck & Bus',\n  'AAV' = 'Volkswagen of South Africa',\n  'ABJ' = 'Mitsubishi Colt & Triton pickups made by Mercedes-Benz South Africa 1994-2011',\n  'ACV' = 'Isuzu Motors South Africa 2018-',\n  'AC5' = 'Hyundai Automotive South Africa (cars)',\n  'ADD' = 'UD Trucks Southern Africa (Pty) Ltd',\n  'ADM' = 'General Motors South Africa includes Isuzu through 2018',\n  'ADN' = 'Nissan South Africa (Pty) Ltd',\n  'ADR' = 'Renault Sandero made by Nissan South Africa (Pty) Ltd',\n  'ADX' = 'Tata Automobile Corporation (SA) Ltd.',\n  'AFA' = 'Ford Motor Company of Southern Africa & Samcor',\n  'AFB' = 'Mazda BT-50 made by Ford Motor Company of Southern Africa',\n  'AHH' = 'Hino South Africa',\n  'AHM' = 'Honda Ballade made by Mercedes-Benz South Africa 1982-2000',\n  'AHT' = 'Toyota South Africa Motors',\n  'BF9' = 'KIBO Motorcycles',\n  'CL9' = 'Wallyscar',\n  'DA1' = 'Arab American Vehicles',\n  'DA4' = 'Arab American Vehicles',\n  'DAA' = 'Fiat Auto Egypt Industrial Co',\n  'DAB' = 'BMW Egypt SKD',\n  'DF9' = 'Laraki',\n  'GA1' = 'Renault /SOMACOA - Société Malgache de Construction Automobile',\n\n  // Asia\n  'J81' = 'Chevrolet/Geo car made by Isuzu',\n  'J87' = 'Pontiac/Asüna car made by Isuzu for GM Canada',\n  'J8B' = 'Chevrolet commercial trucks made by Isuzu',\n  'J8C' = 'Chevrolet commercial trucks made by Isuzu',\n  'J8D' = 'GMC commercial trucks made by Isuzu',\n  'J8T' = 'GMC commercial trucks made by Isuzu',\n  'J8Z' = 'Chevrolet pickup truck made by Isuzu',\n  'JA3' = 'Mitsubishi car',\n  'JA4' = 'Mitsubishi MPV/SUV',\n  'JA7' = 'Mitsubishi truck',\n  'JAA' = 'Isuzu truck',\n  'JAB' = 'Isuzu car',\n  'JAC' = 'Isuzu SUV',\n  'JAE' = 'Acura SLX made by Isuzu',\n  'JAL' = 'Isuzu commercial trucks & Chevrolet commercial trucks made by Isuzu 2016+ & Hino S-series truck made by Isuzu',\n  'JAM' = 'Isuzu commercial trucks',\n  'JB3' = 'Dodge car made by Mitsubishi Motors',\n  'JB4' = 'Dodge MPV/SUV made by Mitsubishi Motors',\n  'JB7' = 'Dodge truck made by Mitsubishi Motors',\n  'JC0' = 'Ford brand cars made by Mazda',\n  'JC1' = 'Fiat 124 Spider made by Mazda',\n  'JC2' = 'Ford Courier made by Mazda',\n  'JD1' = 'Daihatsu car',\n  'JD2' = 'Daihatsu SUV',\n  'JD4' = 'Daihatsu truck',\n  'JDA' = 'Daihatsu',\n  'JE3' = 'Eagle car made by Mitsubishi Motors',\n  'JE4' = 'Mitsubishi',\n  'JF1' = 'Subaru - Fuji Heavy Industries car',\n  'JF2' = 'Subaru - Fuji Heavy Industries SUV',\n  'JF3' = 'Subaru - Fuji Heavy Industries truck',\n  'JF4' = 'Saab 9-2X made by Subaru',\n  'JG1' = 'Chevrolet/Geo car made by Suzuki',\n  'JG7' = 'Pontiac/Asuna car made by Suzuki for GM Canada',\n  'JGC' = 'Chevrolet/Geo SUV made by Suzuki',\n  'JGT' = 'GMC SUV made by Suzuki for GM Canada',\n  'JH2' = 'Honda motorcycle/ATV',\n  'JH3' = 'Honda ATV',\n  'JH4' = 'Acura car',\n  'JHA' = 'Hino',\n  'JHB' = 'Hino',\n  'JHD' = 'Hino',\n  'JHF' = 'Hino',\n  'JHH' = 'Hino',\n  'JHL' = 'Honda MPV/SUV',\n  'JHM' = 'Honda car',\n  'JJ3' = 'Chrysler car made by Mitsubishi Motors',\n  'JK8' = 'Suzuki QUV620F UTV made by Kawasaki',\n  'JKA' = 'Kawasaki',\n  'JKB' = 'Kawasaki',\n  'JKS' = 'Suzuki Marauder 1600/Boulevard M95 motorcycle made by Kawasaki',\n  'JL5' = 'Mitsubishi FUSO Truck & Bus Corp',\n  'JL6' = 'Mitsubishi FUSO Truck & Bus Corp',\n  'JLF' = 'Mitsubishi FUSO Truck & Bus Corp',\n  'JLS' = 'Sterling Trucks 360 made by Mitsubishi FUSO Truck & Bus Corp',\n  'JM0' = 'Mazda for Oceania export',\n  'JM1' = 'Mazda car',\n  'JM2' = 'Mazda truck',\n  'JM3' = 'Mazda MPV/SUV',\n  'JM6' = 'Mazda',\n  'JM7' = 'Mazda',\n  'JMA' = 'Mitsubishi',\n  'JMB' = 'Mitsubishi',\n  'JMF' = 'Mitsubishi',\n  'JMY' = 'Mitsubishi',\n  'JMZ' = 'Mazda for Europe export',\n  'JN' = 'Nissan',\n  'JN1' = 'Nissan car & Infiniti car',\n  'JN3' = 'Nissan incomplete vehicle',\n  'JN6' = 'Nissan truck',\n  'JN8' = 'Nissan MPV/SUV & Infiniti SUV',\n  'JNA' = 'Nissan Diesel/UD Trucks incomplete vehicle',\n  'JNC' = 'Nissan Diesel/UD Trucks',\n  'JNE' = 'Nissan Diesel/UD Trucks truck',\n  'JNK' = 'Infiniti car',\n  'JNR' = 'Infiniti SUV',\n  'JNX' = 'Infiniti incomplete vehicle',\n  'JP3' = 'Plymouth car made by Mitsubishi Motors',\n  'JP4' = 'Plymouth MPV/SUV made by Mitsubishi Motors',\n  'JP7' = 'Plymouth truck made by Mitsubishi Motors',\n  'JPC' = 'Nissan Diesel/UD Trucks',\n  'JR2' = 'Isuzu Oasis made by Honda',\n  'JS' = 'Suzuki',\n  'JS1' = 'Suzuki motorcycle & Kawasaki KLX400S/KLX400SR motorcycle made by Suzuki',\n  'JS2' = 'Suzuki car',\n  'JS3' = 'Suzuki SUV',\n  'JSA' = 'Kawasaki KFX400 ATV made by Suzuki',\n  'JSK' = 'Kawasaki KLX125/KLX125L motorcycle made by Suzuki',\n  'JSL' = 'Kawasaki KFX400 ATV made by Suzuki',\n  'JT' = 'Toyota',\n  'JT2' = 'Toyota car',\n  'JT3' = 'Toyota MPV/SUV',\n  'JT4' = 'Toyota truck',\n  'JT5' = 'Toyota incomplete vehicle',\n  'JT6' = 'Lexus SUV',\n  'JT8' = 'Lexus car',\n  'JTD' = 'Toyota car',\n  'JTE' = 'Toyota MPV/SUV',\n  'JTF' = 'Toyota van/truck',\n  'JTG' = 'Toyota MPV/bus',\n  'JTH' = 'Lexus car',\n  'JTJ' = 'Lexus SUV',\n  'JTK' = 'Toyota car',\n  'JTL' = 'Toyota SUV',\n  'JTM' = 'Toyota SUV',\n  'JTN' = 'Toyota car',\n  'JW6' = 'Mitsubishi FUSO division of Mitsubishi Motors (through mid 2003)',\n  'JY' = 'Yamaha Motor',\n  'JY3' = 'Yamaha Motor 3-wheel ATV',\n  'JY4' = 'Yamaha Motor 4-wheel ATV',\n  'JYA' = 'Yamaha Motor motorcycles',\n  'JYE' = 'Yamaha Motor snowmobile',\n  'KF3' = 'Merkavim',\n  'KF6' = 'Automotive Industries, Ltd.',\n  'KF9' = 'Tomcar',\n  '004' = 'Tomcar',\n  'KLA' = 'Daewoo/GM Korea',\n  'KLT' = 'Tata Daewoo',\n  'KLU' = 'Tata Daewoo',\n  'KL1' = 'GM Daewoo/GM Korea Chevrolet car',\n  'KL2' = 'Daewoo/GM Daewoo Pontiac',\n  'KL3' = 'GM Daewoo/GM Korea Holden',\n  'KL4' = 'GM Korea Buick',\n  'KL5' = 'GM Daewoo Suzuki',\n  'KL6' = 'GM Daewoo GMC',\n  'KL7' = 'Daewoo GM Canada brands: Passport, Asuna (Pre-2000)',\n  'KL8' = 'GM Daewoo/GM Korea Chevrolet car (Spark)',\n  'KMA' = 'Asia Motors',\n  'KME' = 'Hyundai commercial truck',\n  'KMF' = 'Hyundai van & commercial truck & Bering Truck',\n  'KMH' = 'Hyundai car',\n  'KMJ' = 'Hyundai bus & minibus',\n  'KMT' = 'Genesis Motor car',\n  'KMU' = 'Genesis Motor SUV',\n  'KMY' = 'Daelim Motor Company, Ltd/DNA Motors Co., Ltd.',\n  'KM4' = 'Hyosung Motors/S&T Motors/KR Motors',\n  'KM8' = 'Hyundai SUV',\n  'KNA' = 'Kia car',\n  'KNC' = 'Kia car',\n  'KNE' = 'Kia car',\n  'KND' = 'Kia SUV/MPV & Hyundai Entourage',\n  'KNJ' = 'Ford Festiva & Aspire',\n  'KNM' = 'Renault Samsung Motors & Nissan Rogue made by Renault Samsung Motors',\n  'KPA' = 'SsangYong pickup',\n  'KPB' = 'SsangYong car',\n  'KPH' = 'Mitsubishi Precis',\n  'KPT' = 'SsangYong SUV/MPV',\n  'L1C' = 'Hubei Huawei Special-Purpose Automobile',\n  'L2C' = 'Chery Jaguar Land Rover',\n  'L5Y' = 'Znen Taizhou Zhongneng Motorcycle Co. Ltd.',\n  'L6T' = 'Geely',\n  'L8A' = 'Jinhua Youngman Automobile Manufacturing Co., Ltd.',\n  'L8Y' = 'Zhejiang Jonway Motorcycle Manufacturing Co., Ltd.',\n  'L9N' = 'Zhejiang Taotao Vehicles Co., Ltd.',\n  'LA6' = 'King Long',\n  'LA9' = 'BYD Auto',\n  'LC0' = 'BYD Auto',\n  'LAL' = 'Sundiro Honda Motorcycle Co., Ltd.',\n  'LB1' = 'Fujian Benz',\n  'LB2' = 'Geely motorcycle',\n  'LB3' = 'Geely',\n  'LBB' = 'Qianjiang Motorcycle & Benelli',\n  'LBE' = 'Beijing Hyundai',\n  'LBP' = 'Chonqing Jianshe Yamaha Motor Co. Ltd.',\n  'LBV' = 'BMW Brilliance',\n  'LC2' = 'Changzhou Kwang Yang Motor Co., Ltd.',\n  'LC6' = 'Changzhou Haojue Suzuki Motorcycle Co. Ltd.',\n  'LCE' = 'CF Moto by Chunfeng Holding Group Hangzhou Motorcycles Manufacturing Co., Ltd.',\n  'LCR' = 'Gonow',\n  'LDC' = 'Dongfeng Peugeot-Citroën',\n  'LDK' = 'FAW Bus (Dalian) Co., Ltd.',\n  'LDN' = 'Soueast',\n  'LDY' = 'Zhongtong Bus',\n  'LE4' = 'Beijing Benz & Beijing Benz-Daimler Chrysler Automotive Co., Ltd.',\n  'LEF' = 'JMC',\n  'LET' = 'Jiangxi Isuzu',\n  'LF3' = 'Lifan motorcycle',\n  'LFB' = 'FAW Jilin',\n  'LFM' = 'FAW Toyota',\n  'LFN' = 'FAW Bus (Wuxi) Co., Ltd.',\n  'LFP' = 'FAW Car',\n  'LFV' = 'FAW-Volkswagen',\n  'LGA' = 'Dongfeng Commercial Vehicle Co., Ltd. trucks',\n  'LGB' = 'Dongfeng Nissan',\n  'LGC' = 'Dongfeng Commercial Vehicle Co., Ltd. buses',\n  'LGG' = 'Dongfeng Liuzhou Motor',\n  'LGJ' = 'Dongfeng Fengshen (Aeolus)',\n  'LGL' = 'Guilin Daewoo',\n  'LGW' = 'Great Wall (Haval)',\n  'LGX' = 'BYD Auto',\n  'LGZ' = 'Guangzhou Denway Bus',\n  'LH1' = 'FAW Haima',\n  'LHG' = 'Guangzhou Honda',\n  'LJ1' = 'JAC',\n  'LJ8' = 'Zotye Auto',\n  'LJC' = 'Jincheng Corporation',\n  'LJD' = 'Dongfeng Yueda Kia',\n  'LJN' = 'Zhengzhou Nissan',\n  'LJS' = 'Yaxing Coach',\n  'LJU' = 'Shanghai Maple Automobile & Kandi',\n  'LJV' = 'Sinotruk Chengdu Wangpai Commercial Vehicle Co., Ltd.',\n  'LJX' = 'JMC Ford',\n  'LKC' = 'Changhe',\n  'LKG' = 'Youngman Lotus Automobile Co., Ltd.',\n  'LKL' = 'Higer Bus',\n  'LKT' = 'Yunnan Lifan Junma Vehicle Co., Ltd. commercial vehicles',\n  'LL3' = 'Xiamen Golden Dragon Bus Co. Ltd',\n  'LL6' = 'GAC Mitsubishi',\n  'LL8' = 'Jiangsu Linhai Yamaha Motor Co., Ltd.',\n  'LLC' = 'Loncin Holdings',\n  'LLN' = 'Qoros',\n  'LLV' = 'Lifan',\n  'LM6' = 'SWM (automobiles)',\n  'LMG' = 'GAC Trumpchi',\n  'LNB' = 'BAIC Motor',\n  'LNP' = 'NAC MG UK Limited & Nanjing Fiat Automobile',\n  'LNY' = 'Yuejin',\n  'LPA' = 'Changan PSA (DS Automobiles)',\n  'LPE' = 'BYD Auto',\n  'LPS' = 'Polestar',\n  'LRB' = 'SAIC General Motors Buick',\n  'LRD' = 'Beijing Foton Daimler Automotive Co., Ltd. Auman trucks',\n  'LRE' = 'SAIC General Motors Cadillac',\n  'LRW' = 'Tesla',\n  'LS5' = 'Changan Automobile & Changan Suzuki',\n  'LS7' = 'JMC Heavy Duty Vehicle',\n  'LSF' = 'SAIC Maxus & Shanghai Sunwin Bus Corporation',\n  'LSG' = 'SAIC General Motors Chevrolet',\n  'LSH' = 'SAIC Maxus',\n  'LSJ' = 'SAIC MG & SAIC Roewe',\n  'LSK' = 'SAIC Maxus',\n  'LSV' = 'SAIC Volkswagen',\n  'LSY' = 'Brilliance & Jinbei GM',\n  'LTA' = 'ZX Auto',\n  'LTN' = 'Soueast built Chrysler & Dodge vehicles',\n  'LTV' = 'FAW Toyota (Tianjin)',\n  'LUC' = 'Honda Automobile (China)',\n  'LUD' = 'Dongfeng Nissan Diesel Motor Co Ltd',\n  'LUX' = 'Dongfeng Yulon Motor Co. Ltd',\n  'LVA' = 'Foton Motor',\n  'LVB' = 'Foton Motor',\n  'LVC' = 'Foton Motor',\n  'LVF' = 'Changhe Suzuki',\n  'LVG' = 'GAC Toyota',\n  'LVH' = 'Dongfeng Honda',\n  'LVM' = 'Chery Commercial Vehicle',\n  'LVR' = 'Changan Mazda',\n  'LVS' = 'Changan Ford & Changan Ford Mazda',\n  'LVV' = 'Chery',\n  'LVX' = 'Landwind',\n  'LVY' = 'Volvo Cars Daqing factory',\n  'LVZ' = 'DFSK Motor',\n  'LWB' = 'Wuyang Honda Motorcycle (Guangzhou) Co., Ltd.',\n  'LWL' = 'Qingling Isuzu',\n  'LWV' = 'GAC Fiat Chrysler',\n  'LXV' = 'Beijing Borgward Automotive Co., Ltd.',\n  'LXY' = 'Chongqing Shineray Motorcycle Co., Ltd.',\n  'LYB' = 'Weichai (Yangzhou) Yaxing Automobile Co., Ltd.',\n  'LYM' = 'Zhuzhou Jianshe Yamaha Motorcycle Co., Ltd.',\n  'LYV' = 'Volvo Cars Chengdu factory & Luqiao factory',\n  'LZF' = 'SAIC Iveco Hongyan',\n  'LZG' = 'Shaanxi Automobile Group Shacman Bus',\n  'LZK' = 'Sinotruk (CNHTC) Huanghe bus',\n  'LZS' = 'Zongshen',\n  'LZU' = 'Guangzhou Isuzu Bus',\n  'LZW' = 'SAIC GM Wuling',\n  'LZY' = 'Yutong',\n  'LZZ' = 'Sinotruk (CNHTC) Howo, Sitrak',\n  'MA1' = 'Mahindra',\n  'MA3' = 'Maruti Suzuki India Limited',\n  'MA6' = 'General Motors India Pvt. Ltd.',\n  'MA7' = 'Hindustan Motors Ltd & Mitsubishi Motors models made by Hindustan Motors & Isuzu models made by Hindustan Motors',\n  'MAH' = 'Fiat India Automobiles Pvt. Ltd',\n  'MAJ' = 'Ford India',\n  'MAK' = 'Honda Cars India',\n  'MAL' = 'Hyundai Motor India',\n  'MAN' = 'Eicher Polaris Multix',\n  'MAT' = 'Tata Motors',\n  'MB1' = 'Ashok Leyland Ltd',\n  'MB8' = 'Suzuki Motorcycle India Limited',\n  'MBF' = 'Royal Enfield',\n  'MBH' = 'Nissan Pixo made by Maruti Suzuki India Limited',\n  'MBJ' = 'Toyota Kirloskar Motor Pvt Ltd',\n  'MBK' = 'MAN Trucks India Pvt. Ltd',\n  'MBL' = 'Hero MotoCorp',\n  'MBU' = 'Swaraj Vehicles Limited',\n  'MBV' = 'Premier Automobiles Ltd',\n  'MBX' = 'Piaggio India Piaggio Ape',\n  'MBY' = 'Asia Motor Works Ltd',\n  'MC1' = 'Force Motors Limited',\n  'MC2' = 'Eicher Motors Limited',\n  'MC4' = 'Dilip Chhabria Design Pvt Ltd',\n  'MCA' = 'FCA India Automobiles Pvt. Ltd',\n  'MCB' = 'General Motors India Pvt. Ltd.',\n  'MCD' = 'Mahindra Two Wheelers',\n  'MCG' = 'Atul Auto',\n  'MCL' = 'International Cars And Motors Ltd',\n  'MD2' = 'Bajaj Auto Ltd & KTM and Husqvarna models built by Bajaj',\n  'MD6' = 'TVS Motor Company',\n  'MD7' = 'LML Ltd including Genuine Scooter Company Stella',\n  'MDE' = 'Kinetic Engineering Limited',\n  'MDH' = 'Nissan Motor India Pvt Ltd',\n  'MDT' = 'Kerala Automobiles Limited',\n  'ME1' = 'India Yamaha Motor Pvt. Ltd',\n  'ME3' = 'Royal Enfield',\n  'ME4' = 'Honda Motorcycle and Scooter India',\n  'ME9' = 'BUYMYEV TECHNOLOGY PVT LTD',\n  'MEC' = 'Daimler India Commercial Vehicles Pvt. Ltd. BharatBenz',\n  'MEE' = 'Renault India Private Limited',\n  'MEG' = 'Harley-Davidson India',\n  'MER' = 'Benelli',\n  'MET' = 'Piaggio India Vespa',\n  'MEX' = 'Škoda Auto Volkswagen India Pvt. Ltd. 2015 on',\n  'MYH' = 'Ather Energy',\n  'MZ7' = 'MG Motor India Pvt. Ltd.',\n  'MZB' = 'Kia India Pvt. Ltd.',\n  'MZD' = 'Classic Legends Private Limited - Jawa',\n  'M3G' = 'Isuzu Motors India',\n  'M6F' = 'UM Lohia Two Wheelers Private Limited',\n  'MH1' = 'PT Astra Honda Motor',\n  'MH3' = 'PT Yamaha Indonesia Motor Mfg.',\n  'MH4' = 'PT Kawasaki Motor Indonesia',\n  'MHF' = 'PT Toyota Astra Motor',\n  'MHK' = 'PT Astra Daihatsu Motor including Toyotas made by Astra Daihatsu',\n  'MHL' = 'PT Mercedes-Benz Indonesia',\n  'MHR' = 'PT Honda Prospect Motor',\n  'MHY' = 'PT Suzuki Indomobil Motor',\n  'MJB' = 'GM Indonesia',\n  'MK2' = 'Mitsubishi Motors Krama Yudha Indonesia',\n  'MK3' = 'PT SGMW Motor Indonesia Wuling',\n  'ML0' = 'Ducati Motor (Thailand) Co., Ltd.',\n  'ML3' = 'Mitsubishi Motors (Thailand)',\n  'ML5' = 'Kawasaki Motors Enterprise Co. Ltd. (Thailand)',\n  'MLC' = 'Thai Suzuki Motor Co., Ltd.',\n  'MLE' = 'Thai Yamaha Motor Co., Ltd.',\n  'MLH' = 'Honda motorcycle',\n  'MLY' = 'Harley-Davidson',\n  'MM0' = 'Mazda (Ford-Mazda AAT plant)',\n  'MM6' = 'Mazda (Ford-Mazda AAT plant)',\n  'MM7' = 'Mazda (Ford-Mazda AAT plant)',\n  'MM8' = 'Mazda (Ford-Mazda AAT plant)',\n  'MMA' = 'Mitsubishi Motors (Thailand)',\n  'MMB' = 'Mitsubishi Motors (Thailand)',\n  'MMC' = 'Mitsubishi Motors (Thailand)',\n  'MMD' = 'Mitsubishi Motors (Thailand)',\n  'MMF' = 'BMW',\n  'MMH' = 'Tata',\n  'MMK' = 'Toyota (Toyota Auto Works plant)',\n  'MMM' = 'Chevrolet',\n  'MML' = 'MG',\n  'MMR' = 'Subaru',\n  'MMS' = 'Suzuki',\n  'MMT' = 'Mitsubishi Motors (Thailand)',\n  'MMU' = 'Holden',\n  'MNA' = 'Ford (Ford-Mazda AAT plant) for Australia/New Zealand export',\n  'MNB' = 'Ford (Ford-Mazda AAT plant) for other right-hand drive markets',\n  'MNC' = 'Ford (Ford-Mazda AAT plant) for left-hand drive markets',\n  'MNK' = 'Hino Motors Manufacturing Thailand Co Ltd',\n  'MNT' = 'Nissan Motor Thailand',\n  'MPA' = 'IMCT Isuzu Motors Company Thailand',\n  'MPB' = 'Ford (FTM plant)',\n  'MP1' = 'IMCT Isuzu Motors Company Thailand',\n  'MP2' = 'Mazda BT-50 pickup built by Isuzu Motors (Thailand) Co., Ltd.',\n  'MP5' = 'Foton',\n  'MRH' = 'Honda car',\n  'MR0' = 'Toyota (Ban Pho and Samrong plant)',\n  'MR1' = 'Toyota (Samrong plant) (Fortuner)',\n  'MR2' = 'Toyota (Gateway plant)',\n  'MS0' = 'SSS MOTORS Myanmar/Kia',\n  'MS3' = 'Suzuki Myanmar Motor Co., Ltd.',\n  'MXV' = 'IMZ-Ural Ural Motorcycles',\n  'MX3' = 'Hyundai Trans Auto',\n  'N3C' = 'Kavir motor Company (Yektaz)',\n  'N58' = 'Kavir motor Company (EURASIA)',\n  'NAA' = 'Iran khodro Company',\n  'NAD' = 'Saipa Diesel',\n  'NAG' = 'Bahman Industrial Group',\n  'NAP' = 'Pars Khodro',\n  'NAS' = 'Saipa Co.',\n  'NC0' = 'BMW South Africa',\n  'NFB' = 'Honda Atlas Cars Pakistan Ltd',\n  'NG3' = 'Lucky Motor Corporation',\n  'NLA' = 'Honda cars',\n  'NLC' = 'Askam Kamyon Imalat Ve Ticaret A.S.',\n  'NLH' = 'Hyundai Assan Otomotiv car/SUV',\n  'NLJ' = 'Hyundai Assan Otomotiv van',\n  'NLN' = 'Karsan Automotive Industry & Trade',\n  'NLR' = 'Otokar',\n  'NLT' = 'TEMSA',\n  'NL1' = 'Togg',\n  'NMA' = 'MAN Türkiye A.Ş.',\n  'NMB' = 'Mercedes-Benz Türk A.S.',\n  'NMC' = 'BMC Otomotiv Sanayi ve Ticaret A.Ş.',\n  'NMH' = 'Honda motorcycle',\n  'NMT' = 'Toyota Motor Manufacturing Turkey',\n  'NM0' = 'Ford Otosan',\n  'NM1' = 'Oyak-Renault Oto Fab AS',\n  'NM4' = 'Tofas (Turk Otomobil Fabrikasi AS)',\n  'NNA' = 'Anadolu Isuzu',\n  'PAB' = 'Isuzu Philippines Corporation',\n  'PAD' = 'Honda Cars Philippines',\n  'PE1' = 'Ford Motor Company Philippines',\n  'PE3' = 'Mazda Philippines made by Ford Motor Company Philippines',\n  'PL1' = 'Proton',\n  'PL8' = 'Hyundai/Inokom',\n  'PLP' = 'Subaru',\n  'PLZ' = 'Isuzu Malaysia',\n  'PMH' = 'Honda car',\n  'PML' = 'Hicom',\n  'PM1' = 'BMW',\n  'PM2' = 'Perodua',\n  'PM9' = 'Bufori',\n  'PMK' = 'Honda Boon Siew  motorcycle',\n  'PMN' = 'Modenas',\n  'PMV' = 'Hong Leong Yamaha Motor Sdn. Bhd.',\n  'PNA' = 'Naza/Kia/Peugeot',\n  'PNV' = 'Volvo Cars',\n  'PN1' = 'Toyota',\n  'PN2' = 'Toyota',\n  'PN8' = 'Nissan',\n  'PP1' = 'Mazda',\n  'PP3' = 'Hyundai',\n  'PPP' = 'Suzuki',\n  'PPV' = 'Volkswagen',\n  'PR8' = 'Ford',\n  'PRA' = 'Sinotruk',\n  'PRH' = 'Chery',\n  'LFA' = 'Ford Lio Ho Motor Co Ltd old designation',\n  'LM1' = 'Tai Ling Motor Co Ltd old designation',\n  'LM4' = 'Tai Ling Motor Co Ltd old designation',\n  'LPR' = 'Yamaha Motor Taiwan Co. Ltd. old designation',\n  'RF3' = 'Aeon Motor',\n  'RF5' = 'Yulon Motor Co Ltd',\n  'RFB' = 'Kymco',\n  'RFC' = 'Taiwan Golden Bee',\n  'RFD' = 'Tai Ling Motor Co Ltd new designation',\n  'RFG' = 'SYM Motors',\n  'RFV' = 'PGO Scooters including Genuine Scooter Company models made by PGO',\n  'RGS' = 'Kawasaki made by Kymco',\n  'RHA' = 'Ford Lio Ho Motor Co Ltd new designation',\n  'RK7' = 'Kawasaki ATV made by Tai Ling Motor Co Ltd (rebadged Suzuki ATV) new designation',\n  'RKJ' = 'Prince Motors Taiwan',\n  'RKL' = 'Kuozui Motors (Toyota)',\n  'RKM' = 'China Motor Corporation',\n  'RKR' = 'Yamaha Motor Taiwan Co. Ltd. new designation',\n  'RKT' = 'Honda Taiwan',\n  'RL0' = 'Ford Vietnam',\n  'RL4' = 'Toyota Motor Vietnam',\n  'RLA' = 'Vina Star Motors Corp. - Mitsubishi',\n  'RLC' = 'Yamaha Motor Vietnam Co. Ltd.',\n  'RLE' = 'Isuzu Vietnam Co.',\n  'RLH' = 'Honda Vietnam Co. Ltd.',\n  'RLL' = 'VinFast SUV',\n  'RLM' = 'Mercedes-Benz Vietnam',\n  'RLV' = 'Vietnam Precision Industrial CO., Ltd. Can-Am DS 70 & DS 90',\n  'RP8' = 'Piaggio Vietnam Co. Ltd.',\n  'R4N' = 'Elyx Smart Technology Holdings (Hong Kong) Ltd.',\n\n  // Europe\n  'SA9' = 'Morgan Motor Company',\n  '005' = 'Panther',\n  '019' = 'TVR',\n  '039' = 'Westfield Sportscars',\n  '048' = 'McLaren F1',\n  '050' = 'Marcos Engineering',\n  '130' = 'MG Sport and Racing',\n  '202' = 'Morgan 3-Wheeler',\n  'SAA' = 'Austin',\n  'SAB' = 'Optare',\n  'SAD' = 'Daimler until April 1987',\n  'SAF' = 'ERF',\n  'SAH' = 'Honda made by Austin Rover Group',\n  'SAJ' = 'Jaguar',\n  'SAL' = 'Land Rover',\n  'SAM' = 'Morris',\n  'SAR' = 'Rover & MG Rover Group',\n  'SAT' = 'Triumph car',\n  'SAX' = 'Austin Rover Group including Sterling Cars',\n  'SAY' = 'Norton Motorcycles',\n  'SAZ' = 'Freight Rover',\n  'SBB' = 'Leyland Vehicles',\n  'SBC' = 'Iveco Ford Truck',\n  'SBJ' = 'Leyland Bus',\n  'SBL' = 'Leyland Motors & Leyland DAF',\n  'SBM' = 'McLaren Group',\n  'SBS' = 'Scammell',\n  'SBV' = 'Kenworth & Peterbilt trucks made by Leyland Trucks',\n  'SB1' = 'Toyota Manufacturing UK',\n  'SCA' = 'Rolls-Royce Motor Cars & Rolls-Royce Motors car',\n  'SCB' = 'Bentley Motors Limited',\n  'SCC' = 'Lotus Cars Limited',\n  'SCE' = 'DeLorean',\n  'SCF' = 'Aston Martin Lagonda Limited',\n  'SCG' = 'Triumph Engineering original Triumph Motorcycle company',\n  'SCK' = 'Ifor Williams Trailers',\n  'SCR' = 'London Electric Vehicle Company & London Taxi Company & London Taxis International',\n  'SCV' = 'Volvo Truck & Bus',\n  'SC6' = 'INEOS Automotive',\n  'SDB' = 'Talbot Motor Company',\n  'SDF' = 'Dodge Trucks - UK 1981-1984',\n  'SDG' = 'Renault Trucks Industries 1985-1992',\n  'SDK' = 'Caterham Cars',\n  'SDL' = 'TVR',\n  'SDP' = 'MG Motor NAC MG UK & MG Motor UK',\n  'SD7' = 'Aston Martin SUVs',\n  'SED' = 'IBC Vehicles (Isuzu Bedford Company)',\n  'SEG' = 'Dennis Eagle',\n  'SEY' = 'LDV Group',\n  'SFA' = 'Ford of Britain',\n  'SFD' = 'Dennis',\n  'SFE' = 'Alexander Dennis',\n  'SFN' = 'Foden',\n  'SFZ' = 'Tesla Roadster made by Lotus',\n  'SGD' = 'Swift Group Ltd.',\n  'SHH' = 'Honda UK Manufacturing car',\n  'SHS' = 'Honda UK Manufacturing SUV',\n  'SJA' = 'Bentley SUV',\n  'SJK' = 'Nissan Motor Manufacturing UK Infiniti',\n  'SJN' = 'Nissan Motor Manufacturing UK Nissan',\n  'SKA' = 'Vauxhall Motors',\n  'SKF' = 'Bedford Vehicles',\n  'SLA' = 'Rolls-Royce Motor Cars SUV',\n  'SLP' = 'JC Bamford Excavators',\n  'SLV' = 'Volvo Bus',\n  'SMT' = 'Triumph Motorcycles Ltd current Triumph Motorcycle company',\n  'SNE' = 'Wartburg',\n  'SNT' = 'Trabant',\n  'SNZ' = 'MZ Motorrad- und Zweiradwerk',\n  'SUA' = 'Sanocka Fabryka Autobusow Sfa / Autosan',\n  'SUD' = 'Wielton',\n  'SUF' = 'Fabryka Samochodów Małolitrażowych',\n  'SUJ' = 'Jelcz',\n  'SUL' = 'FSC Lublin Automotive Factory',\n  'SUM' = 'Metal-Fach Sp. z o.o.',\n  'SUN' = 'FSD [pl]',\n  'SUP' = 'Fabryka Samochodow Osobowych',\n  'SUU' = 'Solaris Bus & Coach',\n  'SZA' = 'Scania Production Slupsk',\n  'TAM' = 'Mowag',\n  'TAP' = 'Polaris Europe (based in Switzerland)',\n  'TCC' = 'Micro Compact Car (until 5/99)',\n  'TEB' = 'Bucher Municipal including Johnston Sweepers of the UK (owned by Bucher Municipal of Switzerland)',\n  'TK9' = 'SOR Libchavy',\n  'SL5' = 'SOR Libchavy',\n  'TLJ' = 'Jawa Moto',\n  'TMA' = 'Hyundai Motor Manufacturing Czech car',\n  'TMB' = 'Škoda Auto AS',\n  'TMC' = 'Hyundai Motor Manufacturing Czech SUV',\n  'TMK' = 'Karosa',\n  'TMP' = 'Škoda Ostrov',\n  'TMT' = 'Tatra car',\n  'TNA' = 'Avia/Daewoo Avia',\n  'TNT' = 'Tatra trucks',\n  'TNU' = 'Tatra trucks',\n  'TRA' = 'Ikarus Bus',\n  'TRU' = 'Audi',\n  'TSM' = 'Suzuki',\n  'TW1' = 'Toyota Caetano Portugal',\n  'TW3' = 'Renault Portuguesa SARL',\n  'TW7' = 'Mini Moke made by British Leyland & Austin Rover',\n  'TW8' = 'General Motors De Portugal Lda',\n  'TWG' = 'Salvador Caetano',\n  'TX5' = 'Mini Moke made by Cagiva',\n  'TYA' = 'Mitsubishi Fuso Truck and Bus Corp.',\n  'TYB' = 'Mitsubishi Fuso Truck and Bus Corp.',\n  'U5Y' = 'Kia Motors Slovakia car',\n  'U6Y' = 'Kia Motors Slovakia SUV',\n  'ULA' = 'ASA-LIFT: Vegetable Technology Specialist (Agricultural Machinery)',\n  'UU1' = 'Dacia',\n  'UU2' = 'Oltcit',\n  'UU3' = 'ARO',\n  'UU5' = 'Rocar',\n  'UU6' = 'Daewoo Romania',\n  'UU7' = 'Euro Bus Diamond',\n  'UU9' = 'Astra Bus',\n  'UZT' = 'UTB (Uzina de Tractoare Brașov)',\n  'VA0' = 'ÖAF',\n  'VAG' = 'Steyr-Daimler-Puch Puch G & Steyr-Puch Pinzgauer',\n  'VAN' = 'Steyr-Daimler-Puch Steyr Trucks',\n  'VBK' = 'KTM',\n  'VCF' = 'Fisker Inc. (Fisker Ocean) made by Magna Steyr',\n  'VF1' = 'Renault & Eagle Medallion made by Renault',\n  'VF2' = 'Renault Trucks',\n  'VF3' = 'Peugeot',\n  'VF4' = 'Talbot',\n  'VF5' = 'Iveco Unic',\n  'VF6' = 'Renault Trucks',\n  'VF7' = 'Citroën',\n  'VF8' = 'Matra/Talbot/Simca',\n  'VF9' = 'Mathieu Fayat Group',\n  '607' = 'Mathieu Fayat Group',\n  '673' = 'Venturi Automobiles',\n  '795' = 'Bugatti Automobiles S.A.S.',\n  'VFA' = 'Alpine',\n  'VG5' = 'MBK & Yamaha Motor',\n  'VG6' = 'Renault Trucks & Mack Trucks medium duty trucks made by Renault Trucks',\n  'VG7,' = 'Renault Trucks',\n  'VG8' = 'Renault Trucks',\n  'VGA' = 'Peugeot Motocycles',\n  'VJ1' = 'Heuliez Bus',\n  'VK8' = 'Venturi Automobiles',\n  'VL4' = 'Bluecar',\n  'VLU' = 'Scania Production Angers',\n  'VMK' = 'Renault Sport Spider',\n  'VN1' = 'Renault SOVAB',\n  'VNE' = 'Iveco Bus',\n  'VNK' = 'Toyota Motor Manufacturing France',\n  'VNV' = 'Nissan',\n  'VR1' = 'DS Automobiles',\n  'VR3' = 'Peugeot',\n  'VR7' = 'Citroën',\n  'VPS' = 'MLT Automotive',\n  'VXE' = 'Opel Automobile Gmbh/Vauxhall van',\n  'VXK' = 'Opel Automobile Gmbh/Vauxhall car/SUV',\n  'VS1' = 'Pegaso',\n  'VS5' = 'Renault España',\n  'VS6' = 'Ford Espana',\n  'VS7' = 'Citroën',\n  'VS8' = 'Peugeot',\n  'VSC' = 'Mercedes-Benz Espana SA (Vitoria)',\n  'VSE' = 'Santana Motor',\n  'VSK' = 'Nissan Motor Iberica SA, Nissan passenger car/MPV/van/SUV/pickup & Ford Maverick 1993-1999',\n  'VSS' = 'SEAT',\n  'VSX' = 'Opel Automobile Espana,SA',\n  'VTD' = 'Montesa Honda Honda Montesa motorcycle models',\n  'VTH' = 'Derbi',\n  'VTL' = 'Yamaha Motor España SA & Yamaha Sociedad Española de Motocicletas',\n  'VTM' = 'Montesa Honda Honda motorcycle models',\n  'VTR' = 'Gas Gas',\n  'VTT' = 'Suzuki Motor España Motorcycle',\n  'VV9' = 'Tauro Sport Auto',\n  'VWA' = 'Nissan Vehiculos Industriales SA, Nissan Commercial Vehicles',\n  'VX1' = 'Zastava Automobiles',\n  'V31' = 'Tvornica Autobusa Zagreb (TAZ)',\n  'V39' = 'Rimac Automobili',\n  'AB8' = 'Rimac Automobili',\n  'WAC' = 'Audi/Porsche RS 2 Avant',\n  'WAG' = 'Neoplan',\n  'WAU' = 'Audi car',\n  'WAP' = 'Alpina',\n  'WUA' = 'Audi SUV',\n  'WBA' = 'BMW car',\n  'WBS' = 'BMW M car',\n  'WBX' = 'BMW SUV',\n  'WBY' = 'BMW i car',\n  'WB1' = 'BMW Motorrad Motorcycle',\n  'WB3' = 'BMW Motorrad Motorcycles made in India',\n  'WB4' = 'BMW Motorrad Motorscooters made in China',\n  'WB5' = 'BMW i SUV',\n  'WCD' = 'Freightliner Sprinter \"bus\" (van with more than 3 rows of seats) 2008-2019',\n  'WD0' = 'Dodge Sprinter truck (cargo van with 1 row of seats) 2005-2009',\n  'WD1' = 'Freightliner Sprinter 2002 & Sprinter (Dodge or Freightliner) 2003-2005 incomplete vehicle',\n  'WD2' = 'Freightliner Sprinter 2002 & Sprinter (Dodge or Freightliner) 2003-2005 truck (cargo van with 1 row of seats)',\n  'WD3' = 'Mercedes-Benz truck (cargo van with 1 row of seats) (North America)',\n  'WD4' = 'Mercedes-Benz MPV (van with 2 or 3 rows of seats) (North America)',\n  'WD5' = 'Freightliner Sprinter 2002 & Sprinter (Dodge or Freightliner) 2003-2005 MPV (van with 2 or 3 rows of seats)',\n  'WD6' = 'Freightliner Unimog truck',\n  'WD7' = 'Freightliner Unimog incomplete vehicle',\n  'WD8' = 'Dodge Sprinter MPV (van with 2 or 3 rows of seats) 2005-2009',\n  'WDA' = 'Mercedes-Benz incomplete vehicle (North America)',\n  'WDB' = 'Mercedes-Benz & Maybach',\n  'WDC' = 'Mercedes-Benz SUV',\n  'WDD' = 'Mercedes-Benz car',\n  'WDF' = 'Mercedes-Benz van (French & Spanish built models - Citan & Vito & X-Class)',\n  'WDP' = 'Freightliner Sprinter incomplete vehicle 2005-2019',\n  'WDR' = 'Freightliner Sprinter MPV (van with 2 or 3 rows of seats) 2005-2019',\n  'WDW' = 'Dodge Sprinter \"bus\" (van with more than 3 rows of seats) 2008-2009',\n  'WDX' = 'Dodge Sprinter incomplete vehicle 2005-2009',\n  'WDY' = 'Freightliner Sprinter truck (cargo van with 1 row of seats) 2005-2019',\n  'WDZ' = 'Mercedes-Benz \"bus\" (van with more than 3 rows of seats) (North America)',\n  'WEB' = 'EvoBus Mercedes-Benz buses',\n  'WEL' = 'e.GO Mobile AG',\n  'WF0' = 'Ford of Europe',\n  'WF1' = 'Merkur',\n  'WJM' = 'Iveco/Iveco Magirus',\n  'WJR' = 'Irmscher',\n  'WKK' = 'Setra & Karl Kässbohrer Fahrzeugwerke',\n  'WMA' = 'MAN',\n  'WME' = 'Smart (from 5/99)',\n  'WMW' = 'Mini car',\n  'WMX' = 'Mercedes-AMG used for Mercedes-Benz SLS AMG & Mercedes-AMG GT (not used in North America)',\n  'WMZ' = 'Mini SUV',\n  'WNA' = 'Next.e.GO Mobile SE',\n  'WP0' = 'Porsche car',\n  'WP1' = 'Porsche SUV',\n  'WS5' = 'StreetScooter',\n  'WU1' = 'Audi Sport GmbH SUV',\n  'WVG' = 'Volkswagen SUV',\n  'WVM' = 'Arbeitsgemeinschaft VW-MAN',\n  'WVP' = 'Viseon Bus',\n  'WVW' = 'Volkswagen car',\n  'WV1' = 'Volkswagen Commercial Vehicles',\n  'WV2' = 'Volkswagen Commercial Vehicles',\n  'WZ1' = 'Toyota Supra Fifth generation',\n  'W04' = 'Buick Regal & Buick Cascada',\n  'W06' = 'Cadillac Catera',\n  'W08' = 'Saturn Astra',\n  'W09' = 'Bitter Cars',\n  'B09' = 'Bitter Cars',\n  'B16' = 'Brabus',\n  'D05' = 'Drögmöller',\n  'HA8' = 'HWA AG',\n  'R06' = 'Ruf Automobile',\n  'W0L' = 'Adam Opel AG/Vauxhall & Holden',\n  'W0S' = 'Opel Special Vehicles',\n  'W0V' = 'Opel Automobile Gmbh/Vauxhall & Holden',\n  'W1A' = 'Smart',\n  'W1H' = 'Freightliner Econic',\n  'W1K' = 'Mercedes-Benz car',\n  'W1N' = 'Mercedes-Benz SUV',\n  'W1T' = 'Mercedes-Benz truck',\n  'W1V' = 'Mercedes-Benz van',\n  'W1W' = 'Mercedes-Benz MPV (van with 2 or 3 rows of seats) (North America)',\n  'W1X' = 'Mercedes-Benz incomplete vehicle (North America)',\n  'W1Y' = 'Mercedes-Benz truck (cargo van with 1 row of seats) (North America)',\n  'W1Z' = 'Mercedes-Benz \"bus\" (van with more than 3 rows of seats) (North America)',\n  'W2W' = 'Freightliner Sprinter MPV (van with 2 or 3 rows of seats)',\n  'W2X' = 'Freightliner Sprinter incomplete vehicle',\n  'W2Y' = 'Freightliner Sprinter truck (cargo van with 1 row of seats)',\n  'W2Z' = 'Freightliner Sprinter \"bus\" (van with more than 3 rows of seats)',\n  'XBB' = 'Great Wall Motors/Litex Motors AD',\n  'XL9' = 'Autobusfabriek Bova BV',\n  '003' = 'Autobusfabriek Bova BV',\n  '320' = 'VDL Bova',\n  '363' = 'Spyker Cars',\n  'XLB' = 'Volvo Car B.V./NedCar B.V. (Volvo Cars)',\n  'XLE' = 'Scania Nederland B.V.',\n  'XLR' = 'DAF Trucks & Leyland DAF',\n  'XLV' = 'DAF Bus',\n  'XMC' = 'NedCar B.V. Mitsubishi Motors',\n  'XMG' = 'VDL Bus International',\n  'XNC' = 'NedCar B.V. Mitsubishi Motors (Colt CZC convertible)',\n  'XNL' = 'VDL Bus & Coach',\n  'XP7' = 'Tesla Europe (based in the Netherlands)',\n  'XTA' = 'AvtoVAZ',\n  'XTB' = 'AZLK',\n  'XTC' = 'KAMAZ',\n  'XTF' = 'GolAZ',\n  'XTH' = 'GAZ',\n  'XTT' = 'UAZ',\n  'XTY' = 'LiAZ',\n  'XU1' = 'UAZ Special Purpose Vehicles',\n  'XUF' = 'General Motors Russia',\n  'XUU' = 'Chevrolet made by Avtotor',\n  'XW7' = 'Toyota Motor Manufacturing Russia',\n  'XW8' = 'Volkswagen Group Rus',\n  'XWE' = 'Hyundai Motor Company & Kia made by Avtotor',\n  'X1E' = 'KAvZ',\n  'X1M' = 'PAZ',\n  'X4X' = 'BMW made by Avtotor',\n  'X7L' = 'Renault Russia',\n  'X8J' = 'IMZ-Ural Ural Motorcycles',\n  'X96' = 'GAZ',\n  'X9F' = 'Ford Motor Company ZAO',\n  'X9L' = 'GM-AvtoVAZ',\n  'X9P' = 'Volvo Vostok ZAO Volvo Trucks',\n  'X9X' = 'Great Wall Motors IMS Avtotrade-12 LLC',\n  'Z6F' = 'Ford Sollers',\n  'Z8N' = 'Nissan Manufacturing Rus',\n  'Z8T' = 'PCMA Rus',\n  'Z94' = 'Hyundai Motor Manufacturing Rus',\n  'Z9M' = 'Mercedes-Benz Trucks Vostok',\n  'XWB' = 'UzDaewoo GM Uzbekistan Ravon',\n  'Y6D' = 'ZAZ',\n  'Y6J' = 'Bogdan group',\n  'Y6U' = 'Škoda Auto made by Eurocar',\n  'Y7B' = 'Bogdan group',\n  'Y7C' = 'Great Wall Motors KrASZ',\n  'YAR' = 'Toyota Motor Europe (based in Belgium) used for Toyota ProAce & Toyota ProAce City',\n  'YB3' = 'Volvo Trucks',\n  'YB6' = 'Jonckheere',\n  'YC1' = 'Honda',\n  'YE2' = 'Van Hool',\n  'YH2' = 'Lynx (snowmobile)',\n  'YH4' = 'Fisker Automotive (Fisker Karma) built by Valmet Automotive',\n  'YK1' = 'Saab built by Valmet Automotive',\n  'YK7' = 'Sisu Auto',\n  'YS2' = 'Scania, Södertälje truck',\n  'YS3' = 'Saab',\n  'YS4' = 'Scania, Katrineholm bus',\n  'YSC' = 'Cadillac BLS built by Saab',\n  'YSM' = 'Polestar',\n  'YT9' = 'Koenigsegg Automotive AB',\n  '007' = 'Koenigsegg Automotive AB',\n  'YTN' = 'Saab NEVS',\n  'YU7' = 'Husaberg Swedish built models',\n  'YV1' = 'Volvo Cars car',\n  'YV2' = 'Volvo Trucks',\n  'YV3' = 'Volvo Buses',\n  'YV4' = 'Volvo Cars SUV',\n  'YV5' = 'Volvo Trucks incomplete vehicle',\n  'YYC' = 'Think Nordic',\n  'ZA9' = 'Lamborghini through mid 2003',\n  'A12' = 'Lamborghini through mid 2003',\n  'D38' = 'Cizeta Automobili SRL',\n  'D39' = 'Bugatti Automobili S.p.A',\n  'F76' = 'Pagani Automobili S.p.A.',\n  'M09' = 'Italdesign Automobili Speciali',\n  'M27' = 'Dallara Stradale',\n  'M91' = 'Automobili Pininfarina',\n  'ZAA' = 'Autobianchi',\n  'ZAC' = 'Jeep and Dodge Hornet',\n  'ZAM' = 'Maserati car',\n  'ZAP' = 'Piaggio and Vespa and Gilera',\n  'ZAR' = 'Alfa Romeo car & Nissan Cherry Europe',\n  'ZAS' = 'Alfa Romeo Alfasud & Sprint through 1989',\n  'ZBB' = 'Gruppo Bertone',\n  'ZBN' = 'Benelli',\n  'ZBW' = 'Rayton-Fissore Magnum',\n  'ZC2' = 'Chrysler TC by Maserati',\n  'ZC6' = 'Effedi Veicoli Commerciali',\n  'ZCF' = 'Iveco',\n  'ZCG' = 'Cagiva & MV Agusta',\n  'ZD0' = 'Yamaha Motor Italia SpA & Belgarda SpA',\n  'ZD3' = 'Betamotor S.p.A.',\n  'ZD4' = 'Aprilia',\n  'ZDC' = 'Honda Italia Industriale S.p.A.',\n  'ZDM' = 'Ducati Motor Holding',\n  'ZDT' = 'De Tomaso Modena SpA',\n  'ZDY' = 'Cacciamali',\n  'ZE8' = 'Bremach',\n  'ZES' = 'Bimota',\n  'ZF4' = 'Qvale',\n  'ZFA' = 'Fiat car Also Fiat Fullback',\n  'ZFB' = 'Fiat MPV/SUV',\n  'ZFC' = 'Ram 1200',\n  'ZFF' = 'Ferrari',\n  'ZFM' = 'Fantic Motor',\n  'ZFR' = 'Pininfarina',\n  'ZGA' = 'Iveco Bus',\n  'ZGU' = 'Moto Guzzi',\n  'ZHU' = 'Husqvarna Motorcycles Under Cagiva ownership',\n  'ZHW' = 'Lamborghini car from mid 2003',\n  'ZJM' = 'Malaguti',\n  'ZJN' = 'Innocenti',\n  'ZJT' = 'Italjet',\n  'ZKH' = 'Husqvarna Motorcycles Srl Under BMW ownership',\n  'ZK5' = 'Hyundai Automobili Italia Importazioni',\n  'ZLA' = 'Lancia',\n  'ZLM' = 'Moto Morini srl',\n  'ZLV' = 'Laverda',\n  'ZN0' = 'SWM Motorcycles S.r.l.',\n  'ZN3' = 'Iveco Defence',\n  'ZN6' = 'Maserati SUV',\n  'ZNN' = 'Energica Motor Company',\n  'ZPB' = 'Lamborghini SUV',\n  'ZPY' = 'DR Automobiles',\n  'ZZ1' = 'Tomos motorcycle',\n\n  // North America\n  '1A4' = 'Chrysler brand  MPV/SUV 2006-2009 only',\n  '1A8' = 'Chrysler brand  MPV/SUV 2006-2009 only',\n  '1AC' = 'American Motors Corporation MPV',\n  '1AF' = 'American LaFrance truck',\n  '1AM' = 'American Motors Corporation car & Renault Alliance 1983 only',\n  '1B3' = 'Dodge car 1981-2011',\n  '1B4' = 'Dodge MPV/SUV 1981-2002',\n  '1B6' = 'Dodge incomplete vehicle 1981-2002',\n  '1B7' = 'Dodge truck 1981-2002',\n  '1B9' = 'Buell Motorcycle Company through mid 1995',\n  '133' = 'Buell Motorcycle Company through mid 1995',\n  '975' = 'Motus Motorcycles',\n  '1BA' = 'Blue Bird Corporation bus',\n  '1BB' = 'Blue Bird Wanderlodge MPV',\n  '1BD' = 'Blue Bird Corporation incomplete vehicle',\n  '1BL' = 'Balko, Inc. from Ladysmith, WI',\n  '1C3' = 'Chrysler brand car 1981-2011',\n  '1C4' = 'Chrysler brand MPV 1990-2005',\n  '1C6' = 'Chrysler Group (all brands) truck 2012-',\n  '1C8' = 'Chrysler brand MPV 2001-2005',\n  '1C9' = 'CX Automotive',\n  '291' = 'CX Automotive',\n  '1CM' = 'Checker Motors Corporation',\n  '1CU' = 'Cushman Haulster (Cushman division of Outboard Marine Corporation)',\n  '1CY' = 'Crane Carrier Company',\n  '1D3' = 'Dodge truck 2002-2009',\n  '1D4' = 'Dodge MPV/SUV 2003-2011 only',\n  '1D7' = 'Dodge truck 2002-2011',\n  '1D8' = 'Dodge MPV/SUV 2003-2009 only',\n  '1F' = 'Ford',\n  '1F1' = 'Ford SUV - limousine (through 2009)',\n  '1F6' = 'Ford stripped chassis made by Detroit Chassis LLC',\n  '1F9' = 'Seagrave',\n  'ST2' = 'Seagrave',\n  '1FA' = 'Ford car',\n  '1FB' = 'Ford \"bus\" (van with more than 3 rows of seats)',\n  '1FC' = 'Ford stripped chassis made by Ford',\n  '1FD' = 'Ford incomplete vehicle',\n  '1FM' = 'Ford MPV/SUV',\n  '1FT' = 'Ford truck',\n  '1FU' = 'Freightliner Trucks',\n  '1FV' = 'Freightliner Trucks',\n  '1G' = 'General Motors',\n  '1G0' = 'GMC \"bus\" (van with more than 3 rows of seats) 1981-1986',\n  '1G1' = 'Chevrolet car',\n  '1G2' = 'Pontiac car',\n  '1G3' = 'Oldsmobile car',\n  '1G4' = 'Buick car',\n  '1G5' = 'GMC MPV/SUV 1981-1986',\n  '1G6' = 'Cadillac car',\n  '1G7' = 'Pontiac car only sold by GM Canada',\n  '1G8' = 'Chevrolet MPV/SUV 1981-1986',\n  '1G9' = 'Google & Waymo',\n  '495' = 'Google & Waymo',\n  '1GA' = 'Chevrolet \"bus\" (van with more than 3 rows of seats)',\n  '1GB' = 'Chevrolet incomplete vehicles',\n  '1GC' = 'Chevrolet truck',\n  '1GD' = 'GMC incomplete vehicles',\n  '1GE' = 'Cadillac incomplete vehicle',\n  '1GF' = 'Flxible bus',\n  '1GG' = 'Isuzu pickup trucks made by GM',\n  '1GH' = 'Oldsmobile MPV/SUV 1990-2004',\n  '1GJ' = 'GMC \"bus\" (van with more than 3 rows of seats) 1987-',\n  '1GK' = 'GMC MPV/SUV 1987-',\n  '1GM' = 'Pontiac MPV',\n  '1GN' = 'Chevrolet MPV/SUV 1987-',\n  '1GT' = 'GMC truck',\n  '1GY' = 'Cadillac SUV',\n  '1H9' = 'Crane Carrier Company',\n  'A' = 'Crane Carrier Company',\n  '1HA' = 'Chevrolet incomplete vehicles made by Navistar International',\n  '1HD' = 'Harley-Davidson',\n  '1HF' = 'Honda motorcycle/ATV/UTV',\n  '1HG' = 'Honda car made by Honda of America Mfg. in Ohio',\n  '1HS' = 'International Trucks & Caterpillar Trucks truck',\n  '1HT' = 'International Trucks & Caterpillar Trucks & Chevrolet Silverado 4500HD, 5500HD, 6500HD incomplete vehicle',\n  '1HV' = 'IC Bus incomplete bus',\n  '1J4' = 'Jeep SUV 1989-2011 (using Chrysler-style VIN structure)',\n  '1J7' = 'Jeep truck 1989-1992 (using Chrysler-style VIN structure)',\n  '1J8' = 'Jeep SUV 2002-2011 (using Chrysler-style VIN structure)',\n  '1JC' = 'Jeep SUV 1981-1988 (using AMC-style VIN structure)',\n  '1JT' = 'Jeep truck 1981-1988 (using AMC-style VIN structure)',\n  '1JU' = 'Marmon Motor Company',\n  '1L' = 'Lincoln',\n  '1L1' = 'Lincoln car - limousine',\n  '1L9' = 'Laforza',\n  '234' = 'Laforza',\n  '1LJ' = 'Lincoln incomplete vehicle',\n  '1LN' = 'Lincoln car',\n  '1M0' = 'John Deere Gator',\n  '1M1' = 'Mack Trucks',\n  '1M2' = 'Mack Trucks',\n  '1M8' = 'Motor Coach Industries',\n  '1M9' = 'Mosler Automotive',\n  '682' = 'Mosler Automotive',\n  '816' = 'Proterra Through mid-2019',\n  '1MB' = 'Mercedes-Benz Truck Co.',\n  '1ME' = 'Mercury car',\n  '1MR' = 'Continental Mark VI & VII 1981-1985 & Continental sedan 1982-1985',\n  '1N4' = 'Nissan car',\n  '1N6' = 'Nissan truck',\n  '1N9' = 'Neoplan USA',\n  '013' = 'Neoplan USA',\n  '393' = 'Nikola Corporation',\n  '1NK' = 'Kenworth incomplete vehicle',\n  '1NP' = 'Peterbilt incomplete vehicle',\n  '1NX' = 'Toyota car made by NUMMI',\n  '1P3' = 'Plymouth car',\n  '1P4' = 'Plymouth MPV/SUV',\n  '1P9' = 'Panoz',\n  '213' = 'Panoz',\n  '1S9' = 'Scania AB Scania CN112 bus made in Orange, CT',\n  '098' = 'Scania AB Scania CN112 bus made in Orange, CT',\n  '842' = 'Saleen S7',\n  '944' = 'SSC North America',\n  '1T7' = 'Thomas Built Buses',\n  '1T8' = 'Thomas Built Buses',\n  '1T9' = 'Tomcar USA',\n  '899' = 'Tomcar USA',\n  '1TU' = 'Transportation Manufacturing Corporation',\n  '1UT' = 'Jeep DJ made by AM General',\n  '1V1' = 'Volkswagen truck',\n  '1V2' = 'Volkswagen SUV',\n  '1V9' = 'Vector Aeromotive',\n  '1VH' = 'Orion Bus Industries',\n  '1VW' = 'Volkswagen car',\n  '1WU' = 'White truck',\n  '1WV' = 'Winnebago Industries',\n  '1WW' = 'Winnebago Industries',\n  '1WX' = 'White incomplete vehicle',\n  '1WY' = 'White incomplete vehicle',\n  '1XK' = 'Kenworth truck',\n  '1XM' = 'Renault Alliance/GTA/Encore 1984-1987',\n  '1XP' = 'Peterbilt truck',\n  '1Y1' = 'Chevrolet/Geo car made by NUMMI',\n  '1YJ' = 'Rokon International, Inc.',\n  '1YV' = 'Mazda',\n  '1Z3' = 'Mitsubishi Raider',\n  '1Z7' = 'Mitsubishi Raider',\n  '1Z9' = 'Oshkosh Specialty Vehicles LLC',\n  '332' = 'Oshkosh Specialty Vehicles LLC',\n  '1ZV' = 'Ford made by AutoAlliance International',\n  '1ZW' = 'Mercury made by AutoAlliance International',\n  '10R' = 'E-Z-GO',\n  '10T' = 'Oshkosh Corporation',\n  '12A' = 'Avanti',\n  '137' = 'AM General Hummer & Hummer H1',\n  '15G' = 'Gillig bus',\n  '16X' = 'Vixen 21 motorhome',\n  '17N' = 'John Deere incomplete vehicle (RV chassis)',\n  '19U' = 'Acura car made by Honda of America Mfg. in Ohio',\n  '19V' = 'Acura car made by Honda Manufacturing of Indiana',\n  '19X' = 'Honda car made by Honda Manufacturing of Indiana',\n  '2A3' = 'Imperial',\n  '2A4' = 'Chrysler brand MPV/SUV 2006-2011 only',\n  '2A8' = 'Chrysler brand MPV/SUV 2006-2011 only',\n  '2AY' = 'Hino',\n  '2AZ' = 'Hino',\n  '2B1' = 'Orion Bus Industries',\n  '2B3' = 'Dodge car 1981-2011',\n  '2B4' = 'Dodge MPV 1981-2002',\n  '2B5' = 'Dodge \"bus\" (van with more than 3 rows of seats) 1981-2002',\n  '2B6' = 'Dodge incomplete vehicle 1981-2002',\n  '2B7' = 'Dodge truck 1981-2002',\n  '2BC' = 'Jeep Wrangler (YJ) 1987-1988 (using AMC-style VIN structure)',\n  '2BP' = 'Ski-Doo',\n  '2BV' = 'Can-Am & Bombardier ATV',\n  '2BW' = 'Can-Am Commander E LSV',\n  '2BX' = 'Can-Am Spyder',\n  '2BZ' = 'Can-Am Freedom Trailer for Can-Am Spyder',\n  '2C1' = 'Geo/Chevrolet car made by CAMI Automotive',\n  '2C3' = 'Chrysler brand car 1981-2011',\n  '2C4' = 'Chrysler brand MPV/SUV 2000-2005',\n  '2C7' = 'Pontiac car made by CAMI Automotive only sold by GM Canada',\n  '2C8' = 'Chrysler brand MPV/SUV 2001-2005',\n  '2C9' = 'Campagna Motors',\n  '145' = 'Campagna Motors',\n  '2CC' = 'American Motors Corporation MPV',\n  '2CG' = 'Asüna/Pontiac SUV made by CAMI Automotive only sold by GM Canada',\n  '2CK' = 'GMC Tracker SUV made by CAMI Automotive only sold by GM Canada 1990-1991 only',\n  '2CM' = 'American Motors Corporation car',\n  '2CN' = 'Geo/Chevrolet SUV made by CAMI Automotive 1990-2011 only',\n  '2CT' = 'GMC Terrain SUV made by CAMI Automotive 2010-2011 only',\n  '2D4' = 'Dodge MPV 2003-2011 only',\n  '2D6' = 'Dodge incomplete vehicle 2003',\n  '2D7' = 'Dodge truck 2003',\n  '2D8' = 'Dodge MPV 2003-2011 only',\n  '2DG' = 'Ontario Drive & Gear',\n  '2E3' = 'Eagle car 1989-1997 (using Chrysler-style VIN structure)',\n  '2E4' = 'Lancia MPV',\n  '2F' = 'Ford',\n  '2FA' = 'Ford car',\n  '2FM' = 'Ford MPV/SUV',\n  '2FT' = 'Ford truck',\n  '2FU' = 'Freightliner Trucks',\n  '2FV' = 'Freightliner Trucks',\n  '2FW' = 'Sterling Trucks truck',\n  '2FY' = 'New Flyer',\n  '2FZ' = 'Sterling Trucks incomplete vehicle',\n  '2Gx' = 'General Motors',\n  '2G0' = 'GMC \"bus\" (van with more than 3 rows of seats) 1981-1986',\n  '2G1' = 'Chevrolet',\n  '2G2' = 'Pontiac',\n  '2G3' = 'Oldsmobile car',\n  '2G4' = 'Buick',\n  '2G5' = 'GMC MPV 1981-1986',\n  '2G6' = 'Cadillac',\n  '2G7' = 'Pontiac car only sold by GM Canada',\n  '2G8' = 'Chevrolet MPV 1981-1986',\n  '2G9' = 'Gnome Homes',\n  '2GA' = 'Chevrolet \"bus\" (van with more than 3 rows of seats)',\n  '2GB' = 'Chevrolet incomplete vehicles',\n  '2GC' = 'Chevrolet truck',\n  '2GD' = 'GMC incomplete vehicles',\n  '2GE' = 'Cadillac incomplete vehicle',\n  '2GH' = 'GMC GM New Look bus & GM Classic series bus',\n  '2GJ' = 'GMC \"bus\" (van with more than 3 rows of seats) 1987-',\n  '2GK' = 'GMC MPV/SUV 1987-',\n  '2GN' = 'Chevrolet MPV/SUV 1987-',\n  '2GT' = 'GMC truck',\n  '2HG' = 'Honda car made by Honda of Canada Manufacturing',\n  '2HH' = 'Acura car made by Honda of Canada Manufacturing',\n  '2HJ' = 'Honda truck made by Honda of Canada Manufacturing',\n  '2HK' = 'Honda MPV/SUV made by Honda of Canada Manufacturing',\n  '2HM' = 'Hyundai',\n  '2HN' = 'Acura SUV made by Honda of Canada Manufacturing',\n  '2HS' = 'International Trucks truck',\n  '2HT' = 'International Trucks incomplete vehicle',\n  '2J4' = 'Jeep Wrangler (YJ) 1989-1992 (using Chrysler-style VIN structure)',\n  '2L1' = 'Lincoln incomplete vehicle - limo',\n  '2L9' = 'Les Contenants Durabac',\n  '2LJ' = 'Lincoln incomplete vehicle - hearse',\n  '2LM' = 'Lincoln SUV',\n  '2LN' = 'Lincoln car',\n  '2M1' = 'Mack Trucks',\n  '2M2' = 'Mack Trucks',\n  '2ME' = 'Mercury car',\n  '2MG' = 'Motor Coach Industries (Produced from Sept. 1, 2008 on)',\n  '2MR' = 'Mercury MPV',\n  '2NK' = 'Kenworth incomplete vehicle',\n  '2NP' = 'Peterbilt incomplete vehicle',\n  '2NV' = 'Nova Bus',\n  '2P3' = 'Plymouth car',\n  '2P4' = 'Plymouth MPV 1981-2000',\n  '2P5' = 'Plymouth \"bus\" (van with more than 3 rows of seats) 1981-1983',\n  '2P9' = 'Prevost 1981-1995',\n  '001' = 'Prevost 1981-1995',\n  '2PC' = 'Prevost 1996-',\n  '2S2' = 'Suzuki car made by CAMI Automotive',\n  '2S3' = 'Suzuki SUV made by CAMI Automotive',\n  '2T1' = 'Toyota car',\n  '2T2' = 'Lexus SUV',\n  '2T3' = 'Toyota SUV',\n  '2V4' = 'Volkswagen Routan',\n  '2V8' = 'Volkswagen Routan',\n  '2WK' = 'Western Star Trucks truck',\n  '2WL' = 'Western Star Trucks incomplete vehicle',\n  '2WM' = 'Western Star Trucks incomplete vehicle',\n  '2XK' = 'Kenworth truck',\n  '2XM' = 'Eagle Premier 1988 only (using AMC-style VIN structure)',\n  '2XP' = 'Peterbilt truck',\n  '3A4' = 'Chrysler brand MPV 2006-2010 only',\n  '3A8' = 'Chrysler brand MPV 2006-2010 only',\n  '3AK' = 'Freightliner Trucks',\n  '3AL' = 'Freightliner Trucks',\n  '3B3' = 'Dodge car 1981-2011',\n  '3B4' = 'Dodge SUV 1986-1993',\n  '3B6' = 'Dodge incomplete vehicle 1981-2002',\n  '3B7' = 'Dodge truck 1981-2002',\n  '3BJ' = 'Western Star 3700 truck made by DINA S.A.',\n  '3BK' = 'Kenworth incomplete vehicle',\n  '3BM' = 'Motor Coach Industries bus made by DINA S.A.',\n  '3BP' = 'Peterbilt incomplete vehicle',\n  '3C3' = 'Chrysler brand car 1981-2011',\n  '3C4' = 'Chrysler brand MPV 2001-2005',\n  '3C6' = 'Chrysler Group (all brands) truck 2012-',\n  '3C7' = 'Chrysler Group (all brands) incomplete vehicle 2012-',\n  '3C8' = 'Chrysler brand MPV 2001-2005',\n  '3CE' = 'Volvo Buses de Mexico',\n  '3CZ' = 'Honda SUV',\n  '3D2' = 'Dodge incomplete vehicle 2007-2009',\n  '3D3' = 'Dodge truck 2006-2009',\n  '3D4' = 'Dodge SUV 2009-2011',\n  '3D6' = 'Dodge incomplete vehicle 2003-2011',\n  '3D7' = 'Dodge truck 2002-2011',\n  '3E4' = 'Fiat SUV',\n  '3F' = 'Ford',\n  '3F6' = 'Sterling Bullet',\n  '3FA' = 'Ford car',\n  '3FC' = 'Ford stripped chassis made by Ford & IMMSA',\n  '3FM' = 'Ford MPV/SUV',\n  '3FN' = 'Ford F-650/F-750 made by Blue Diamond Truck Co.',\n  '3FR' = 'Ford F-650/F-750 made by Blue Diamond Truck Co.',\n  '3FT' = 'Ford truck',\n  '3G' = 'General Motors',\n  '3G0' = 'Saab 9-4X 2011',\n  '3G1' = 'Chevrolet car',\n  '3G2' = 'Pontiac car',\n  '3G4' = 'Buick car',\n  '3G5' = 'Buick SUV',\n  '3G7' = 'Pontiac SUV',\n  '3GC' = 'Chevrolet truck',\n  '3GK' = 'GMC SUV',\n  '3GM' = 'Holden Suburban',\n  '3GN' = 'Chevrolet SUV',\n  '3GS' = 'Saturn SUV',\n  '3GT' = 'GMC truck',\n  '3GY' = 'Cadillac SUV',\n  '3H1' = 'Honda motorcycle/UTV',\n  '3H3' = 'Hyundai de Mexico, S.A. de C.V. for Hyundai Translead (truck trailers)',\n  '3HA' = 'International Trucks incomplete vehicle',\n  '3HC' = 'International Trucks truck',\n  '3HG' = 'Honda car',\n  '3HS' = 'International Trucks & Caterpillar Trucks truck',\n  '3HT' = 'International Trucks & Caterpillar Trucks incomplete vehicle',\n  '3JB' = 'Can-Am ATV/UTV & Can-Am Ryker',\n  '3KP' = 'Kia/Hyundai car',\n  '3LN' = 'Lincoln car',\n  '3MD' = 'Mazda car',\n  '3ME' = 'Mercury car',\n  '3MV' = 'Mazda SUV',\n  '3MW' = 'BMW',\n  '3MY' = 'Toyota car made by Mazda de Mexico Vehicle Operation',\n  '3MZ' = 'Mazda car',\n  '3N1' = 'Nissan car',\n  '3N6' = 'Nissan truck & Chevrolet City Express',\n  '3N8' = 'Nissan MPV',\n  '3NE' = 'Polaris Inc. ATV',\n  '3NS' = 'Polaris Inc. UTV',\n  '3P3' = 'Plymouth car',\n  '3PC' = 'Infiniti SUV made by COMPAS',\n  '3TM' = 'Toyota truck made by TMMBC',\n  '3TY' = 'Toyota truck made by TMMGT',\n  '3VV' = 'Volkswagen SUV',\n  '3VW' = 'Volkswagen car',\n  '3WK' = 'Kenworth truck',\n  '3WP' = 'Peterbilt truck',\n  '4A3' = 'Mitsubishi Motors car',\n  '4A4' = 'Mitsubishi Motors SUV',\n  '4B3' = 'Dodge car made by Diamond-Star Motors factory',\n  '4B9' = 'BYD Coach & Bus LLC',\n  '038' = 'BYD Coach & Bus LLC',\n  '4C3' = 'Chrysler car made by Diamond-Star Motors factory',\n  '4C9' = 'Czinger',\n  '561' = 'Czinger',\n  '4CD' = 'Oshkosh Chassis Division incomplete vehicle (RV chassis)',\n  '4DR' = 'IC Bus',\n  '4E3' = 'Eagle car made by Diamond-Star Motors factory',\n  '4F2' = 'Mazda SUV made by Ford',\n  '4F4' = 'Mazda truck made by Ford',\n  '4G1' = 'Chevrolet Cavalier convertible made by Genasys L.C. - a GM/ASC joint venture',\n  '4G2' = 'Pontiac Sunfire convertible made by Genasys L.C. - a GM/ASC joint venture',\n  '4G3' = 'Toyota Cavalier made by GM',\n  '4G5' = 'General Motors EV1',\n  '4GD' = 'WhiteGMC Brigadier 1988-1989 made by GM',\n  '4GL' = 'Buick incomplete vehicle',\n  '4GT' = 'Isuzu incomplete vehicle built by GM',\n  '4JG' = 'Mercedes-Benz SUV',\n  '4KB' = 'Chevrolet W-Series incomplete vehicle (gas engine only)',\n  '4KD' = 'GMC W-Series incomplete vehicle (gas engine only)',\n  '4KL' = 'Isuzu commercial truck built by GM',\n  '4M2' = 'Mercury MPV/SUV',\n  '4ML' = 'Oshkosh Trailer Division',\n  '4MZ' = 'Buell Motorcycle Company',\n  '4N2' = 'Nissan Quest made by Ford',\n  '4NU' = 'Isuzu Ascender made by GM',\n  '4P1' = 'Pierce Manufacturing',\n  '4P3' = 'Plymouth car made by Diamond-Star Motors factory 1990-1994',\n  '4RK' = 'Nova Bus & Prevost made by Nova Bus (US) Inc.',\n  '4S1' = 'Isuzu truck made by Subaru Isuzu Automotive',\n  '4S2' = 'Isuzu SUV made by Subaru Isuzu Automotive',\n  '4S3' = 'Subaru car',\n  '4S4' = 'Subaru SUV/MPV',\n  '4S6' = 'Honda SUV made by Subaru Isuzu Automotive',\n  '4S7' = 'Spartan Motors incomplete vehicle',\n  '4S9' = 'Smith Electric Vehicles US Corp.',\n  '197' = 'Smith Electric Vehicles US Corp.',\n  '419' = 'Spartan Motors truck',\n  '454' = 'Scuderia Cameron Glickenhaus car',\n  '542' = 'Scuderia Cameron Glickenhaus SCG Boot (M.P.V.)',\n  '544' = 'Scuderia Cameron Glickenhaus car',\n  '559' = 'Spartan Fire, LLC truck (formerly Spartan ER)',\n  '560' = 'Spartan Fire, LLC incomplete vehicle (formerly Spartan ER)',\n  '4T1' = 'Toyota car made by Toyota Motor Manufacturing Kentucky',\n  '4T3' = 'Toyota MPV/SUV made by Toyota Motor Manufacturing Kentucky',\n  '4T4' = 'Toyota car made by Subaru of Indiana Automotive',\n  '4T9' = 'Xos, Inc.',\n  '208' = 'Xos, Inc.',\n  '4TA' = 'Toyota truck made by NUMMI',\n  '4UF' = 'Arctic Cat',\n  '4US' = 'BMW car',\n  '4UZ' = 'Freightliner Custom Chassis Corporation & gas-powered Mitsubishi Fuso trucks assembled by Freightliner Custom Chassis & Thomas Built Buses FS-65 & Saf-T-Liner C2',\n  '4V1' = 'WhiteGMC truck',\n  '4V2' = 'WhiteGMC incomplete vehicle',\n  '4V4' = 'Volvo Trucks North America truck',\n  '4V5' = 'Volvo Trucks North America incomplete vehicle',\n  '4VA' = 'Volvo Trucks North America truck',\n  '4VG' = 'Volvo Trucks North America truck',\n  '4VE' = 'Volvo Trucks North America incomplete vehicle',\n  '4VH' = 'Volvo Trucks North America incomplete vehicle',\n  '4VM' = 'Volvo Trucks North America incomplete vehicle',\n  '4VZ' = 'Spartan Motors/The Shyft Group incomplete vehicle - bare chassis only',\n  '4XA' = 'Polaris Inc.',\n  '4YM' = 'Carry-On Trailer, Inc.',\n  '4Z3' = 'American LaFrance truck',\n  '43C' = 'Consulier',\n  '46G' = 'Gillig incomplete vehicle',\n  '478' = 'Honda ATV',\n  '480' = 'Sterling Trucks truck',\n  '49H' = 'Sterling Trucks incomplete vehicle',\n  '5AS' = 'GEM',\n  '5B4' = 'Workhorse Custom Chassis, LLC incomplete vehicle (RV chassis)',\n  '5BZ' = 'Nissan \"bus\" (van with more than 3 rows of seats)',\n  '5CD' = 'Indian Motorcycle Company of America Gilroy, CA',\n  '5CX' = 'Shelby Series 1',\n  '5DF' = 'Thomas Dennis Company LLC',\n  '5EH' = 'Excelsior-Henderson Motorcycle',\n  '5FN' = 'Honda MPV/SUV made by Honda Manufacturing of Alabama',\n  '5FP' = 'Honda truck made by Honda Manufacturing of Alabama',\n  '5FR' = 'Acura SUV made by Honda Manufacturing of Alabama',\n  '5FY' = 'New Flyer',\n  '5G8' = 'Holden Volt',\n  '5GA' = 'Buick MPV/SUV',\n  '5GD' = 'Daewoo G2X',\n  '5GN' = 'Hummer H3T',\n  '5GR' = 'Hummer H2',\n  '5GT' = 'Hummer H3',\n  '5GZ' = 'Saturn MPV/SUV',\n  '5HD' = 'Harley-Davidson for export markets',\n  '5J6' = 'Honda SUV made by Honda of America Mfg. in Ohio',\n  '5J8' = 'Acura SUV made by Honda of America Mfg. in Ohio',\n  '5KB' = 'Honda car made by Honda Manufacturing of Alabama',\n  '5KJ' = 'Western Star Trucks truck',\n  '5KK' = 'Western Star Trucks truck',\n  '5L1' = 'Lincoln SUV  (2004-2009)',\n  '5LD' = 'Ford & Lincoln incomplete vehicle - limousine (2010-2014)',\n  '5LM' = 'Lincoln SUV',\n  '5LT' = 'Lincoln truck',\n  '5MZ' = 'Buell Motorcycle Company for export markets',\n  '5N1' = 'Nissan & Infiniti SUV',\n  '5N3' = 'Infiniti SUV',\n  '5NM' = 'Hyundai SUV',\n  '5NP' = 'Hyundai car',\n  '5NT' = 'Hyundai truck',\n  '5PV' = 'Hino incomplete vehicle',\n  '5S3' = 'Saab 9-7X',\n  '5SA' = 'Suzuki ATV',\n  '5SX' = 'American LaFrance incomplete vehicle (Condor)',\n  '5TB' = 'Toyota truck made by TMMI',\n  '5TD' = 'Toyota MPV/SUV made by TMMI',\n  '5TE' = 'Toyota truck made by NUMMI',\n  '5TF' = 'Toyota truck made by TMMTX',\n  '5UM' = 'BMW M car',\n  '5UX' = 'BMW SUV',\n  '5VC' = 'Autocar incomplete vehicle',\n  '5VP' = 'Victory Motorcycles',\n  '5WE' = 'IC Bus incomplete vehicle',\n  '5XX' = 'Kia car',\n  '5XY' = 'Kia/Hyundai SUV',\n  '5Y2' = 'Pontiac Vibe made by NUMMI',\n  '5Y4' = 'Yamaha Motor Company ATV, UTV',\n  '5YA' = 'Indian Motorcycle Company Kings Mountain, NC',\n  '5YF' = 'Toyota car made by TMMMS',\n  '5YJ' = 'Tesla',\n  '5YM' = 'BMW M SUV',\n  '5Z6' = 'Suzuki truck made by Nissan',\n  '50E' = 'Lucid Motors',\n  '50G' = 'Karma Automotive',\n  '516' = 'Autocar truck',\n  '51R' = 'Brammo Motorcycles',\n  '523' = 'VPG',\n  '52C' = 'GEM subsidiary of Polaris Inc.',\n  '538' = 'Zero Motorcycles',\n  '53G' = 'Coda Automotive',\n  '53T' = 'Think North America in Elkhart, IN',\n  '546' = 'EBR',\n  '54C' = 'Winnebago Industries trailer',\n  '54D' = 'Isuzu & Chevrolet commercial trucks built by Spartan Motors/The Shyft Group',\n  '55S' = 'Mercedes-Benz car',\n  '56K' = 'Indian Motorcycle International, LLC Polaris subsidiary',\n  '57W' = 'Mobility Ventures',\n  '57X' = 'Polaris Slingshot',\n  '58A' = 'Lexus car made by TMMK',\n\n  // Oceania\n  '6F1' = 'Ford',\n  '6F2' = 'Iveco Trucks Australia Ltd.',\n  '6F4' = 'Nissan Motor Australia',\n  '6F5' = 'Kenworth Australia',\n  '6FM' = 'Mack Trucks Australia',\n  '6FP' = 'Ford',\n  '6G' = 'General Motors',\n  '6G1' = 'Holden & Chevrolet',\n  '6G2' = 'Pontiac',\n  '6G3' = 'Chevrolet',\n  '6H' = 'Holden',\n  '6MM' = 'Mitsubishi',\n  '6MP' = 'Mercury Capri',\n  '6T1' = 'Toyota',\n  '6T9' = 'Trailer',\n  '6U9' = \"Low Volume (Grey) Import Vehicles which don't have 17 Digit VIN. Uses NON ISO VIN with \\\"Filler 0's between WMI & Non Iso VIN - I.e Japanese VIN PV35-400637 would become 6U90000PV35400637 see note below\",\n  '6ZZ' = \"Low Volume (Grey) Import Vehicles which don't have 17 Digit VIN. Uses NON ISO VIN with \\\"Filler 0's between WMI & Non Iso VIN - I.e Japanese VIN PV35-400637 would become 6ZZ0000PV35400637 see note below\",\n  '7A1' = 'Mitsubishi',\n  '7A3' = 'Honda',\n  '7A4' = 'Toyota',\n  '7A5' = 'Ford',\n  '7A7' = 'Nissan New Zealand',\n  '7A8' = 'NZ Transport Agency (pre-2009)',\n  '7AT' = 'NZ Transport Agency (post-2009)',\n\n  // North America\n  '7FA' = 'Honda SUV made by Honda Manufacturing of Indiana',\n  '7FC' = 'Rivian truck',\n  '7GZ' = 'GMC incomplete vehicles made by Navistar International',\n  '7H4' = 'Hino truck',\n  '7JR' = 'Volvo Cars car',\n  '7JZ' = 'Proterra From mid-2019 on',\n  '7KG' = 'Vanderhall Motor Works',\n  '7MM' = 'Mazda SUV made by MTMUS (Mazda-Toyota Joint Venture)',\n  '7MU' = 'Toyota SUV made by MTMUS (Mazda-Toyota Joint Venture)',\n  '7NA' = 'Navistar Defense',\n  '7NY' = 'Lordstown Motors',\n  '7PD' = 'Rivian SUV',\n  '7RZ' = 'Electric Last Mile Solutions',\n  '7R4' = 'Icon Electric Vehicles',\n  '7SA' = 'Tesla SUV 2022+',\n  '7SU' = 'Blue Arc electric trucks made by The Shyft Group',\n  '7SV' = 'Toyota SUV made by TMMTX',\n  '7SX' = 'Global Electric Motorcars',\n  '7Z0' = 'Zoox',\n\n  // South America\n  '8AC' = 'Mercedes-Benz vans (for South America)',\n  '8AD' = 'Peugeot',\n  '8AE' = 'Peugeot van',\n  '8AF' = 'Ford Motor Argentina',\n  '8AG' = 'General Motors de Argentina Chevrolet',\n  '8AJ' = 'Toyota Argentina',\n  '8AN' = 'Nissan',\n  '8AP' = 'Fiat',\n  '8AT' = 'Iveco',\n  '8AW' = 'Volkswagen Argentina',\n  '8A1' = 'Renault Argentina',\n  '8A3' = 'Scania Argentina',\n  '8BB' = 'Agrale Argentina S.A',\n  '8BC' = 'Citroën',\n  '8BN' = 'Mercedes-Benz incomplete vehicle (North America)',\n  '8BR' = 'Mercedes-Benz \"bus\" (van with more than 3 rows of seats) (North America)',\n  '8BT' = 'Mercedes-Benz MPV (van with 2 or 3 rows of seats) (North America)',\n  '8BU' = 'Mercedes-Benz truck (cargo van with 1 row of seats) (North America)',\n  '8CH' = 'Honda motorcycle',\n  '8C3' = 'Honda car/SUV',\n  '8F9' = 'Reborn Electric Motors SPA',\n  '8G1' = 'Automotores Franco Chilena S.A Renault',\n  '8GD' = 'Automotores Franco Chilena S.A Peugeot',\n  '8GG' = 'General Motors Chile Ltda.',\n  '8L4' = 'Great Wall Motors made by Ciudad del Auto Ciauto Cia. Ltda.',\n  '8LB' = 'General Motors OBB',\n  '8LF' = 'Maresa (Mazda)',\n  '8LG' = 'Aymesa (Hyundai Motor & Kia)',\n  '8XD' = 'Ford Motor Venezuela',\n  '8XJ' = 'Mack de Venezuela C.A.',\n  '8XV' = 'Iveco Venezuela C.A.',\n  '8Z1' = 'General Motors Venezolana C.A.',\n  '829' = 'Quantum Motors',\n  '9AM' = 'Massari (?)',\n  '9BD' = 'Fiat Automóveis',\n  '9BF' = 'Ford Brasil',\n  '9BG' = 'General Motors do Brasil Chevrolet',\n  '9BH' = 'Hyundai Motor Brasil',\n  '9BM' = 'Mercedes-Benz car & SUV & commercial truck',\n  '9BN' = 'Mafersa',\n  '9BR' = 'Toyota',\n  '9BS' = 'Scania Brazil',\n  '9BV' = 'Volvo Trucks',\n  '9BW' = 'Volkswagen do Brasil',\n  '9BY' = 'Agrale S.A.',\n  '9C2' = 'Honda Motorcycles',\n  '9C6' = 'Yamaha Motor',\n  '9CD' = 'Suzuki (motorcycles) assembled by J. Toledo Motos do Brasil',\n  '9DW' = 'Kenworth & Peterbilt trucks made by Volkswagen do Brasil',\n  '932' = 'Harley-Davidson',\n  '935' = 'Citroën',\n  '936' = 'Peugeot',\n  '937' = 'Dodge',\n  '93C' = 'General Motors do Brasil Chevrolet SUV (Mexico)',\n  '93H' = 'Honda car/SUV',\n  '93K' = 'Volvo Trucks',\n  '93P' = 'Volare',\n  '93S' = 'Navistar International',\n  '93U' = 'Audi 1999-2006',\n  '93V' = 'Navistar International',\n  '93W' = 'Fiat Ducato made by Iveco 2000-2016',\n  '93X' = 'Souza Ramos - Mitsubishi Motors / Suzuki Jimny',\n  '93Y' = 'Renault do Brasil',\n  '93Z' = 'Iveco',\n  '94D' = 'Nissan',\n  '94G' = 'Indabra',\n  '94M' = 'HVR-Busscar',\n  '94N' = 'RWM Brazil',\n  '94T' = 'Troller Veículos Especiais',\n  '953' = 'VW Truck & Bus / MAN Truck & Bus',\n  '95P' = 'CAOA / Hyundai & CAOA Chery',\n  '95V' = 'Dafra Motos (motorscooters from SYM) & Ducati, KTM, & MV Agusta assembled by Dafra',\n  '95Z' = 'Buell Motorcycle Company assembled by Harley-Davidson Brazil',\n  '96P' = 'Kawasaki',\n  '97N' = 'Triumph Motorcycles Ltd',\n  '988' = 'Jeep and Fiat (made at the Goiana plant)',\n  '98M' = 'BMW car/SUV',\n  '98R' = 'Chery',\n  '99A' = 'Audi 2016-',\n  '99J' = 'Jaguar Land Rover',\n  '99K' = 'Haojue & Kymco assembled by JTZ Indústria e Comércio de Motos',\n  '99L' = 'BYD',\n  '99Z' = 'BMW Motorrad Motorcycle assembled by BMW 2017-',\n  '9FB' = 'Sofasa (Renault)',\n  '9FC' = 'Compañía Colombiana Automotriz S.A. (Mazda)',\n  '9GA' = 'GM Colmotores S.A. (Chevrolet)',\n  '9UJ' = 'Chery assembled by Chery Socma S.A.',\n  '9UK' = 'Lifan',\n  '9UW' = 'Kia made by Nordex S.A.',\n  '9V7' = 'Citroen made by Nordex S.A.',\n  '9V8' = 'Peugeot made by Nordex S.A.',\n}\n","// To avoid errors of misreading, the letters I, O, and Q are not part of any VIN combination.\nexport const ALPHABET_CHARS = [\n  'A',\n  'B',\n  'C',\n  'D',\n  'E',\n  'F',\n  'G',\n  'H',\n  'J',\n  'K',\n  'L',\n  'M',\n  'N',\n  'P',\n  'R',\n  'S',\n  'T',\n  'U',\n  'V',\n  'W',\n  'X',\n  'Y',\n  'Z',\n  '1',\n  '2',\n  '3',\n  '4',\n  '5',\n  '6',\n  '7',\n  '8',\n  '9',\n  '0',\n];\nexport const ALPHABET_INDEX = ALPHABET_CHARS.map((v, i) => [v, i]).reduce(\n  (acc, [v, i]) => ({ ...acc, [v]: i }),\n  {},\n);\n","import {\n  ALPHABET_CHARS,\n  ALPHABET_INDEX,\n  countries,\n  regions,\n} from './constants';\n\nconst mapCountries = (): { string: string } => {\n  const countriesMap: any = {};\n\n  for (let i = 0; i < countries.length; i = i + 2) {\n    const rangeStr = countries[i];\n    const country = countries[i + 1];\n\n    const rangeStart = rangeStr.substring(1, 2);\n    const rangeEnd = rangeStr.substring(4, 5);\n\n    const startIndex =\n      ALPHABET_INDEX[rangeStart as keyof typeof ALPHABET_INDEX];\n    const endIndex = ALPHABET_INDEX[rangeEnd as keyof typeof ALPHABET_INDEX];\n\n    for (let j = startIndex; j <= endIndex; j++) {\n      const code = rangeStr.charAt(0) + ALPHABET_CHARS[j];\n      countriesMap[code] = country;\n    }\n  }\n  return countriesMap;\n};\n\nconst countriesMap = mapCountries();\n\nexport const getCountry = (wmi: string): string => {\n  return countriesMap[wmi.substring(0, 2) as keyof typeof countriesMap];\n};\n\nexport const getRegion = (wmi: string): string => {\n  return regions[wmi.substring(0, 1) as keyof typeof regions];\n};\n","import { manufacturers } from './constants';\n\nexport const getManufacturer = (code: string): string => {\n  if (code.length === 3) {\n    return manufacturers[code as keyof typeof manufacturers];\n  } else {\n    throw new Error('Invalid manufacturer code');\n  }\n};\n","// https://en.wikibooks.org/wiki/Vehicle_Identification_Numbers_(VIN_codes)/Model_year\nexport const years = {\n  A: [1980, 2010],\n  B: [1981, 2011],\n  C: [1982, 2012],\n  D: [1983, 2013],\n  E: [1984, 2014],\n  F: [1985, 2015],\n  G: [1986, 2016],\n  H: [1987, 2017],\n  J: [1988, 2018],\n  K: [1989, 2019],\n  L: [1990, 2020],\n  M: [1991, 2021],\n  N: [1992, 2022],\n  P: [1993, 2023],\n  R: [1994, 2024],\n  S: [1995, 2025],\n  T: [1996, 2026],\n  V: [1997, 2027],\n  W: [1998, 2028],\n  X: [1999, 2029],\n  Y: [2000, 2030],\n  '1': [2001, 2031],\n  '2': [2002, 2032],\n  '3': [2003, 2033],\n  '4': [2004, 2034],\n  '5': [2005, 2035],\n  '6': [2006, 2036],\n  '7': [2007, 2037],\n  '8': [2008, 2038],\n  '9': [2009, 2039],\n};\n","import { years } from './constants/year.constant';\n\n// If the manufacturer chooses to designate year, it is recommended that the year be indicated by the first character of the VIS. (10th character)\n// The recommended code to be used when designating year is indicated in year.constant file.\nexport const getModelYear = (vin: string): {\n  modelYear: string;\n  possibleModelYears: number[]\n} => {\n  vin = vin.toUpperCase();\n  const candidateModelYear = vin.substring(9, 10);\n  const possibleModelYears = years[candidateModelYear as keyof typeof years];\n\n  const validationCharacter = vin.substring(6, 7);\n\n  // Check if the validationCharacter is a Number\n  const modelYear: string = /^\\d+$/.test(validationCharacter)\n    ? possibleModelYears?.find((year) => year < 2010)?.toString() || '-'\n    : possibleModelYears?.find((year) => year >= 2010)?.toString() || '-';\n\n  return { modelYear, possibleModelYears }\n};\n","import { getCountry, getRegion } from './country-region';\nimport { getManufacturer } from './manufacturer';\nimport { getModelYear } from './year';\n\nexport interface VINInfo {\n  // ISO-3779\n  // European Union >500v/year\n  wmi: string;\n  vds: string;\n  vis: string;\n  modelYear: string; // the 10th digit represents the model year\n  manufacturer?: string;\n}\n\nexport interface VINDecoded {\n  vin: string;\n  isValid: boolean;\n  message?: string; // return error message if vin !isValid\n  info?: {\n    region: string;\n    country: string;\n    modelYear: string;\n    possibleModelYears: number[];\n    manufacturer: string;\n  };\n}\n\nexport const validateVIN = (vin: string) => {\n  if (typeof vin !== 'string') {\n    return {\n      isValid: false,\n      error: 'VIN must be a string',\n    };\n  }\n\n  vin = vin.toUpperCase();\n\n  if (vin.length !== 17) {\n    return {\n      isValid: false,\n      error: 'VIN must be 17 characters long',\n    };\n  }\n  // Regex: Validates that a VIN consists of 17 characters and doesn't contain I,O,Q\n  if (!vin.match(/^[A-HJ-NPR-Z0-9]{17}$/)) {\n    return {\n      isValid: false,\n      error: 'VIN contain only letters & numbers except from I, O and Q',\n    };\n  }\n\n  return {\n    isValid: true,\n  };\n};\n\n// Spit VIN to three sections based on ISO3779\nexport const splitVIN = (vin: string): VINInfo => {\n  vin = vin.toUpperCase();\n  return {\n    wmi: vin.substring(0, 3),\n    vds: vin.substring(3, 9),\n    vis: vin.substring(9, 17),\n    modelYear: vin.substring(9, 10),\n  };\n};\n\nexport const decodeVIN = (vin: string): VINDecoded => {\n  vin = vin.toUpperCase();\n\n  const validatedVIN = validateVIN(vin);\n  if (!validatedVIN.isValid) {\n    return {\n      vin,\n      isValid: false,\n      message: validatedVIN.error,\n    };\n  }\n\n  const split = splitVIN(vin);\n  const region = getRegion(split.wmi);\n  const country = getCountry(split.wmi);\n  const { modelYear, possibleModelYears } = getModelYear(vin);\n  const manufacturer = getManufacturer(split.wmi);\n\n  return {\n    vin,\n    isValid: true,\n    info: {\n      region,\n      country,\n      modelYear,\n      possibleModelYears,\n      manufacturer,\n    },\n  };\n};\n"],"mappings":";AAEO,IAAM,YAAY;AAAA,EACvB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;;;AC3QO,IAAK,UAAL,kBAAKA,aAAL;AACL,EAAAA,SAAA,OAAM;AACN,EAAAA,SAAA,OAAM;AACN,EAAAA,SAAA,OAAM;AACN,EAAAA,SAAA,OAAM;AACN,EAAAA,SAAA,OAAM;AACN,EAAAA,SAAA,OAAM;AACN,EAAAA,SAAA,OAAM;AACN,EAAAA,SAAA,OAAM;AACN,EAAAA,SAAA,OAAM;AACN,EAAAA,SAAA,OAAM;AACN,EAAAA,SAAA,OAAM;AACN,EAAAA,SAAA,OAAM;AACN,EAAAA,SAAA,OAAM;AACN,EAAAA,SAAA,OAAM;AACN,EAAAA,SAAA,OAAM;AACN,EAAAA,SAAA,OAAM;AACN,EAAAA,SAAA,OAAM;AACN,EAAAA,SAAA,OAAM;AACN,EAAAA,SAAA,OAAM;AACN,EAAAA,SAAA,OAAM;AAEN,EAAAA,SAAA,OAAM;AAEN,EAAAA,SAAA,OAAM;AAEN,EAAAA,SAAA,OAAM;AAEN,EAAAA,SAAA,OAAM;AAEN,EAAAA,SAAA,OAAM;AAEN,EAAAA,SAAA,OAAM;AAEN,EAAAA,SAAA,OAAM;AAEN,EAAAA,SAAA,OAAM;AAEN,EAAAA,SAAA,OAAM;AAtCI,SAAAA;AAAA,GAAA;;;ACQL,IAAK,gBAAL,kBAAKC,mBAAL;AAEL,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AAGR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,QAAO;AACP,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,QAAO;AACP,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,QAAO;AACP,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,QAAO;AACP,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AAGR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,UAAS;AACT,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AAGR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,QAAO;AACP,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,QAAO;AACP,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,OAAM;AACN,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,QAAO;AACP,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,QAAO;AACP,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,QAAO;AACP,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,QAAO;AACP,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AAGR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,QAAO;AACP,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,QAAO;AACP,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AAGR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AAGR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,EAAAA,eAAA,SAAQ;AACR,E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","names":["regions","manufacturers","countriesMap"]}